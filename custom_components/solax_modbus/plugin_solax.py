import logging
from dataclasses import dataclass
from homeassistant.components.number import NumberEntityDescription
from homeassistant.components.select import SelectEntityDescription
from homeassistant.components.button import ButtonEntityDescription
from pymodbus.payload import BinaryPayloadBuilder, BinaryPayloadDecoder, Endian
#from .const import BaseModbusSensorEntityDescription
from custom_components.solax_modbus.const import *

_LOGGER = logging.getLogger(__name__)

""" ============================================================================================
bitmasks  definitions to characterize inverters, ogranized by group
these bitmasks are used in entitydeclarations to determine to which inverters the entity applies
within a group, the bits in an entitydeclaration will be interpreted as OR
between groups, an AND condition is applied, so all gruoups must match.
An empty group (group without active flags) evaluates to True.
example: GEN3 | GEN4 | X1 | X3 | EPS 
means:  any inverter of tyoe (GEN3 or GEN4) and (X1 or X3) and (EPS)

An entity can be declared multiple times (with different bitmasks) if the parameters are different for each inverter type
"""

GEN            = 0x0001 # base generation for MIC, PV, AC
GEN2           = 0x0002
GEN3           = 0x0004
GEN4           = 0x0008
ALL_GEN_GROUP  = GEN2 | GEN3 | GEN4 | GEN

X1             = 0x0100
X3             = 0x0200
ALL_X_GROUP    = X1 | X3

PV             = 0x0400 # Needs further work on PV Only Inverters
AC             = 0x0800
HYBRID         = 0x1000
MIC            = 0x2000
ALL_TYPE_GROUP = PV | AC | HYBRID | MIC

EPS            = 0x8000
ALL_EPS_GROUP  = EPS

DCB            = 0x10000 # dry contact box - gen4
ALL_DCB_GROUP  = DCB


ALLDEFAULT = 0 # should be equivalent to HYBRID | AC | GEN2 | GEN3 | GEN4 | X1 | X3 


def matchInverterWithMask (inverterspec, entitymask, serialnumber = 'not relevant', blacklist = None):
    # returns true if the entity needs to be created for an inverter
    genmatch = ((inverterspec & entitymask & ALL_GEN_GROUP)  != 0) or (entitymask & ALL_GEN_GROUP  == 0)
    xmatch   = ((inverterspec & entitymask & ALL_X_GROUP)    != 0) or (entitymask & ALL_X_GROUP    == 0)
    hybmatch = ((inverterspec & entitymask & ALL_TYPE_GROUP) != 0) or (entitymask & ALL_TYPE_GROUP == 0)
    epsmatch = ((inverterspec & entitymask & ALL_EPS_GROUP)  != 0) or (entitymask & ALL_EPS_GROUP  == 0)
    dcbmatch = ((inverterspec & entitymask & ALL_DCB_GROUP)  != 0) or (entitymask & ALL_DCB_GROUP  == 0)
    blacklisted = False
    if blacklist:
        for start in blacklist: 
            if serialnumber.startswith(start) : blacklisted = True
    return (genmatch and xmatch and hybmatch and epsmatch and dcbmatch) and not blacklisted

# ======================= end of bitmask handling code =============================================

SENSOR_TYPES = []

# ====================== find inverter type and details ===========================================

def _read_serialnr(hub, address):
    res = None
    try:
        inverter_data = hub.read_holding_registers(unit=hub._modbus_addr, address=address, count=7)
        if not inverter_data.isError(): 
            decoder = BinaryPayloadDecoder.fromRegisters(inverter_data.registers, byteorder=Endian.Big)
            res = decoder.decode_string(14).decode("ascii")
            hub.seriesnumber = res    
    except Exception as ex: _LOGGER.warning(f"{hub.name}: attempt to read serialnumber failed at 0x{address:x}", exc_info=True)
    if not res: _LOGGER.warning(f"{hub.name}: reading serial number from address 0x{address:x} failed; other address may succeed")
    _LOGGER.info(f"Read {hub.name} 0x{address:x} serial number before potential swap: {res}")
    return res

def determineInverterType(hub, configdict):
    global SENSOR_TYPES
    _LOGGER.info(f"{hub.name}: trying to determine inverter type")
    seriesnumber                       = _read_serialnr(hub, 0x0)
    if not seriesnumber:  
        seriesnumber = _read_serialnr(hub, 0x300) # bug in endian.Little decoding?
        if not seriesnumber.startswith("M"):
            ba = bytearray(seriesnumber,"ascii") # convert to bytearray for swapping
            ba[0::2], ba[1::2] = ba[1::2], ba[0::2] # swap bytes ourselves - due to bug in Endian.Little ?
            res = str(ba, "ascii") # convert back to string
            seriesnumber = res
    if not seriesnumber: 
        _LOGGER.error(f"{hub.name}: cannot find serial number, even not for MIC")
        seriesnumber = "unknown"

    # derive invertertupe from seriiesnumber
    if   seriesnumber.startswith('L30E'):  invertertype = HYBRID | GEN2 | X1 # Gen2 X1 SK-TL 3kW
    elif seriesnumber.startswith('U30E'):  invertertype = HYBRID | GEN2 | X1 # Gen2 X1 SK-SU 3kW
    elif seriesnumber.startswith('L37E'):  invertertype = HYBRID | GEN2 | X1 # Gen2 X1 SK-SU 3.7kW Untested
    elif seriesnumber.startswith('U37E'):  invertertype = HYBRID | GEN2 | X1 # Gen2 X1 SK-SU 3.7kW Untested
    elif seriesnumber.startswith('L50E'):  invertertype = HYBRID | GEN2 | X1 # Gen2 X1 SK-SU 5kW
    elif seriesnumber.startswith('U50E'):  invertertype = HYBRID | GEN2 | X1 # Gen2 X1 SK-SU 5kW
    elif seriesnumber.startswith('H1E'):   invertertype = HYBRID | GEN3 | X1 # Gen3 X1 Early
    elif seriesnumber.startswith('HCC'):   invertertype = HYBRID | GEN3 | X1 # Gen3 X1 Alternative
    elif seriesnumber.startswith('HUE'):   invertertype = HYBRID | GEN3 | X1 # Gen3 X1 Late
    elif seriesnumber.startswith('XRE'):   invertertype = HYBRID | GEN3 | X1 # Gen3 X1 Alternative
    elif seriesnumber.startswith('XAC'):   invertertype = AC | GEN3 | X1 # X1AC
    elif seriesnumber.startswith('XB3'):   invertertype = PV | GEN3 | X1 # X1-Boost G3, should work with other kW raiting assuming they use Hybrid registers
    elif seriesnumber.startswith('XM3'):   invertertype = PV | GEN3 | X1 # X1-Mini G3, should work with other kW raiting assuming they use Hybrid registers
    elif seriesnumber.startswith('H3DE'):  invertertype = HYBRID | GEN3 | X3 # Gen3 X3
    elif seriesnumber.startswith('H3E'):   invertertype = HYBRID | GEN3 | X3 # Gen3 X3
    elif seriesnumber.startswith('H3PE'):  invertertype = HYBRID | GEN3 | X3 # Gen3 X3
    elif seriesnumber.startswith('H3UE'):  invertertype = HYBRID | GEN3 | X3 # Gen3 X3
    elif seriesnumber.startswith('F3D'):   invertertype = AC | GEN3 | X3 # RetroFit
    elif seriesnumber.startswith('F3E'):   invertertype = AC | GEN3 | X3 # RetroFit
    elif seriesnumber.startswith('H43'):   invertertype = HYBRID | GEN4 | X1 # Gen4 X1 3kW / 3.7kW
    elif seriesnumber.startswith('H450'):  invertertype = HYBRID | GEN4 | X1 # Gen4 X1 5.0kW
    elif seriesnumber.startswith('H460'):  invertertype = HYBRID | GEN4 | X1 # Gen4 X1 6kW?
    elif seriesnumber.startswith('H475'):  invertertype = HYBRID | GEN4 | X1 # Gen4 X1 7.5kW
    elif seriesnumber.startswith('PRI'):   invertertype = AC | GEN4 | X1 # RetroFit
    elif seriesnumber.startswith('H34'):   invertertype = HYBRID | GEN4 | X3 # Gen4 X3
    elif seriesnumber.startswith('MC10'):  invertertype = MIC | GEN | X3 # MIC X3
    elif seriesnumber.startswith('MC20'):  invertertype = MIC | GEN | X3 # MIC X3
    elif seriesnumber.startswith('MP15'):  invertertype = MIC | GEN | X3 # MIC X3
    elif seriesnumber.startswith('MU80'):  invertertype = MIC | GEN | X3 # MIC X3
    # add cases here
    else: 
        invertertype = 0
        _LOGGER.error(f"unrecognized inverter type - serial number : {seriesnumber}")
    read_eps = configdict.get(CONF_READ_EPS, DEFAULT_READ_EPS)
    read_dcb = configdict.get(CONF_READ_DCB, DEFAULT_READ_DCB)
    if read_eps: invertertype = invertertype | EPS 
    if read_dcb: invertertype = invertertype | DCB
    hub.invertertype = invertertype
    if invertertype & MIC: SENSOR_TYPES = SENSOR_TYPES_MIC
    else: SENSOR_TYPES = SENSOR_TYPES_MAIN

# =================================================================================================

@dataclass
class SolaxModbusButtonEntityDescription(BaseModbusButtonEntityDescription):
    allowedtypes: int = ALLDEFAULT # maybe 0x0000 (nothing) is a better default choice

@dataclass
class SolaxModbusNumberEntityDescription(BaseModbusNumberEntityDescription):
    allowedtypes: int = ALLDEFAULT # maybe 0x0000 (nothing) is a better default choice

@dataclass
class SolaxModbusSelectEntityDescription(BaseModbusSelectEntityDescription):
    allowedtypes: int = ALLDEFAULT # maybe 0x0000 (nothing) is a better default choice

@dataclass
class SolaXModbusSensorEntityDescription(BaseModbusSensorEntityDescription):
    allowedtypes: int = ALLDEFAULT # maybe 0x0000 (nothing) is a better default choice
    order16: int = Endian.Big
    order32: int = Endian.Little
    unit: int = REGISTER_U16
    register_type: int = REG_HOLDING

@dataclass
class SolaXMicModbusSensorEntityDescription(BaseModbusSensorEntityDescription):
    # A class that describes SolaX Power MIC Modbus sensor entities.
    allowedtypes: int = ALLDEFAULT # maybe 0x0000 (nothing) is a better default choice
    order16: int = Endian.Big
    order32: int = Endian.Little
    unit: int = REGISTER_U16
    register_type: int = REG_HOLDING
"""
@dataclass
class SofarModbusSensorEntityDescription(BaseModbusSensorEntityDescription):
    allowedtypes: int = ALLDEFAULT # maybe 0x0000 (nothing) is a better default choice
    order16: int = Endian.Big
    order32: int = Endian.Big
    unit: int = REGISTER_U16
    register_type: int= REG_HOLDING
"""

# ================================= Computed sensor value functions  =================================================


def value_function_pv_total_power(initval, descr, datadict):
    return  datadict.get('pv_power_1', 0) + datadict.get('pv_power_2',0)

def value_function_grid_import(initval, descr, datadict):
    val = datadict["feedin_power"]
    if val<0: return abs(val)
    else: return 0

def value_function_grid_export(initval, descr, datadict):
    val = datadict["feedin_power"]
    if val>0: return val
    else: return 0

def value_function_house_load(initval, descr, datadict):
    return datadict['inverter_load'] - datadict['feedin_power']

def value_function_rtc(initval, descr, datadict):
    (rtc_seconds, rtc_minutes, rtc_hours, rtc_days, rtc_months, rtc_years, ) = initval
    val = f"{rtc_days:02}/{rtc_months:02}/{rtc_years:02} {rtc_hours:02}:{rtc_minutes:02}:{rtc_seconds:02}"
    return datetime.strptime(val, '%d/%m/%y %H:%M:%S')

def value_function_gen4time(initval, descr, datadict):
    h = initval % 256
    m = initval >> 8
    return f"{h:02d}:{m:02d}"

def value_function_gen23time(initval, descr, datadict):
    (h,m,) = initval
    return f"{h:02d}:{m:02d}"

# ================================= Button Declarations ============================================================

BUTTON_TYPES = [
    SolaxModbusButtonEntityDescription( name = "Battery Awaken",
        key = "battery_awaken",
        register = 0x56,
        command = 1,
        allowedtypes = ALLDEFAULT,
        icon="mdi:battery-clock",
    ),
    SolaxModbusButtonEntityDescription( name = "Grid Export",
        key = "grid_export",
        register = 0x51,
        icon="mdi:home-export-outline",
        command = 1,
        allowedtypes = GEN3 | HYBRID | AC,
        entity_category = EntityCategory.CONFIG,
    ),
    SolaxModbusButtonEntityDescription( name = "Unlock Inverter",
        key = "unlock_inverter",
        register = 0x00,
        command = 2014,
        allowedtypes = ALLDEFAULT,
        entity_category = EntityCategory.CONFIG,
        icon="mdi:lock-open",
    ),
    SolaxModbusButtonEntityDescription( name = "Unlock Inverter - Advanced",
        key = "unlock_inverter_advanced",
        register = 0x00,
        command = 6868,
        allowedtypes = ALLDEFAULT,
        entity_category = EntityCategory.CONFIG,
        icon="mdi:lock-open",
    ),
]

# ================================= Number Declarations ============================================================

MAX_CURRENTS = [
    ('L30E',  100 ), # Gen2 X1 SK-TL
    ('U30',    50 ), # Gen2 X1 SK-SU
    ('L37E',  100 ), # Gen2 X1 SK-TL
    ('U37',    50 ), # Gen2 X1 SK-SU
    ('L50E',  100 ), # Gen2 X1 SK-TL
    ('U50',    50 ), # Gen2 X1 SK-SU
    ('F3D',    35 ), # RetroFit X3
    ('F3E',    25 ), # RetroFit X3
    ('H3DE',    25 ), # Gen3 X3 might need changing?
    ('H3E',    25 ), # Gen3 X3
    ('H3PE',    25 ), # Gen3 X3 might need changing?
    ('H3UE',    25 ), # Gen3 X3
    ('H43',   30 ), # Gen4 X1 3 / 3.7kW
    ('H450',   30 ), # Gen4 X1 5kW
    ('H460',   30 ), # Gen4 X1 6kW
    ('H475',   30 ), # Gen4 X1 7.5kW
    ('PRI5',   30 ), # Gen4 X1 RetroFit 5kWh
    ('H34A',    30 ), # Gen4 X3 A
    ('H34B',    30 ), # Gen4 X3 B
    ('H34T',    25 ), # Gen4 X3 T
    ### All known Inverters added
]

MAX_EXPORT = [
    ('L30E',    3000 ), # Gen2 X1 SK-TL
    ('U30',     3000 ), # Gen2 X1 SK-SU
    ('L37E',    3700 ), # Gen2 X1 SK-TL
    ('U37',     3700 ), # Gen2 X1 SK-SU
    ('L50E',    4600 ), # Gen2 X1 SK-TL
    ('U50',     4600 ), # Gen2 X1 SK-SU
    ('H1E30',   5000 ), # Gen3 X1
    ('H1E37',   5000 ), # Gen3 X1
    ('H1E46',   6000 ), # Gen3 X1
    ('H1E5',    6000 ), # Gen3 X1
    ('HCC30',   5000 ), # Gen3 X1
    ('HCC37',   5000 ), # Gen3 X1
    ('HCC46',   6000 ), # Gen3 X1
    ('HCC5',    6000 ), # Gen3 X1
    ('HUE30',   5000 ), # Gen3 X1
    ('HUE37',   5000 ), # Gen3 X1
    ('HUE46',   6000 ), # Gen3 X1
    ('HUE5',    6000 ), # Gen3 X1
    ('XRE30',   5000 ), # Gen3 X1
    ('XRE37',   5000 ), # Gen3 X1
    ('XRE46',   6000 ), # Gen3 X1
    ('XRE5',    6000 ), # Gen3 X1
    ('F3D6',    9000 ), # RetroFit X3
    ('F3D8',   12000 ), # RetroFit X3
    ('F3D10',  15000 ), # RetroFit X3
    ('F3D15',  16500 ), # RetroFit X3
    ('F3E6',    9000 ), # RetroFit X3
    ('F3E8',   12000 ), # RetroFit X3
    ('F3E10',  15000 ), # RetroFit X3
    ('F3E15',  16500 ), # RetroFit X3
    ('H3DE05', 10000 ), # Gen3 X3
    ('H3DE06', 12000 ), # Gen3 X3
    ('H3DE08', 14000 ), # Gen3 X3
    ('H3DE10', 15000 ), # Gen3 X3
    ('H3E05', 10000 ), # Gen3 X3
    ('H3E06', 12000 ), # Gen3 X3
    ('H3E08', 14000 ), # Gen3 X3
    ('H3E10', 15000 ), # Gen3 X3
    ('H3PE05', 10000 ), # Gen3 X3
    ('H3PE06', 12000 ), # Gen3 X3
    ('H3PE08', 14000 ), # Gen3 X3
    ('H3PE10', 15000 ), # Gen3 X3
    ('H3UE05', 10000 ), # Gen3 X3
    ('H3UE06', 12000 ), # Gen3 X3
    ('H3UE08', 14000 ), # Gen3 X3
    ('H3UE10', 15000 ), # Gen3 X3
    ('H430',    6300 ), # Gen4 X1 3kW?
    ('H437',    7300 ), # Gen4 X1 3.7kW
    ('H450',    9200 ), # Gen4 X1 5kW
    ('H460',    9200 ), # Gen4 X1 6kW
    ('H475',    9200 ), # Gen4 X1 7.5kW
    ('PRI5',    9200 ), # Gen4 X1 RetroFit 5kW
    ('H34A05',  7500 ), # Gen4 X3 A
    ('H34A08', 12000 ), # Gen4 X3 A
    ('H34A10', 15000 ), # Gen4 X3 A
    ('H34A12', 15000 ), # Gen4 X3 A
    ('H34A15', 16500 ), # Gen4 X3 A
    ('H34B05',  7500 ), # Gen4 X3 B
    ('H34B08', 12000 ), # Gen4 X3 B
    ('H34B10', 15000 ), # Gen4 X3 B
    ('H34B12', 15000 ), # Gen4 X3 B
    ('H34B15', 16500 ), # Gen4 X3 B
    ('H34T05',  7500 ), # Gen4 X3 T
    ('H34T08', 12000 ), # Gen4 X3 T
    ('H34T10', 15000 ), # Gen4 X3 T
    ('H34T12', 15000 ), # Gen4 X3 T
    ('H34T15', 16500 ), # Gen4 X3 T
    ### All known Inverters added
]

EXPORT_LIMIT_SCALE_EXCEPTIONS = [
    ('H34', 10), # assuming all Gen4s 
    ('H4', 10 ), # assuming all Gen4s
#    ('H1E', 10 ), # assuming all Gen4s
]


NUMBER_TYPES = [
    SolaxModbusNumberEntityDescription( name = "Backup Charge End Hours",
        key = "backup_charge_end_h", 
        register = 0x97,
        fmt = "i",
        native_min_value = 0,
        native_max_value = 23,
        native_step = 1,
        native_unit_of_measurement = TIME_HOURS,
        allowedtypes = GEN3,
        entity_category = EntityCategory.CONFIG,
        icon="mdi:battery-clock",
    ),
    SolaxModbusNumberEntityDescription( name = "Backup Charge End Minutes",
        key = "backup_charge_end_m",
        register = 0x98,
        fmt = "i",
        native_min_value = 0,
        native_max_value = 59,
        native_step = 1,
        native_unit_of_measurement = TIME_MINUTES,
        allowedtypes = GEN3,
        entity_category = EntityCategory.CONFIG,
        icon="mdi:battery-clock",
    ),
    SolaxModbusNumberEntityDescription( name = "Backup Charge Start Hours",
        key = "backup_charge_start_h", 
        register = 0x95,
        fmt = "i",
        native_min_value = 0,
        native_max_value = 23,
        native_step = 1,
        native_unit_of_measurement = TIME_HOURS,
        allowedtypes = GEN3,
        entity_category = EntityCategory.CONFIG,
        icon="mdi:battery-clock",
    ),
    SolaxModbusNumberEntityDescription( name = "Backup Charge Start Minutes",
        key = "backup_charge_start_m",
        register = 0x96,
        fmt = "i",
        native_min_value = 0,
        native_max_value = 59,
        native_step = 1,
        native_unit_of_measurement = TIME_MINUTES,
        allowedtypes = GEN3,
        entity_category = EntityCategory.CONFIG,
        icon="mdi:battery-clock",
    ),
    SolaxModbusNumberEntityDescription( name = "Backup Discharge Min SOC",
        key = "backup_discharge_min_soc",
        register = 0x67,
        fmt = "i",
        native_min_value = 10,
        native_max_value = 100,
        native_step = 1,
        native_unit_of_measurement = PERCENTAGE,
        allowedtypes = GEN4,
        icon="mdi:battery-sync",
    ),
    SolaxModbusNumberEntityDescription( name = "Backup Nightcharge Upper SOC",
        key = "backup_nightcharge_upper_soc", 
        register = 0x66,
        fmt = "i",
        native_min_value = 10,
        native_max_value = 100,
        native_step = 1,
        native_unit_of_measurement = PERCENTAGE,
        allowedtypes = GEN4,
        icon="mdi:battery-sync",
    ),
    SolaxModbusNumberEntityDescription( name = "Battery Minimum Capacity",
        key = "battery_minimum_capacity",
        register = 0x20,
        fmt = "i",
        native_min_value = 10,
        native_max_value = 99,
        native_step = 1,
        native_unit_of_measurement = PERCENTAGE,
        state = "battery_minimum_capacity",
        allowedtypes = GEN2 | GEN3,
        icon="mdi:battery-sync",
    ),
    SolaxModbusNumberEntityDescription( name = "Battery Minimum Capacity - Grid-tied",
        key = "battery_minimum_capacity_gridtied",
        register = 0xa7,
        fmt = "i",
        native_min_value = 15,
        native_max_value = 99,
        native_step = 1,
        native_unit_of_measurement = PERCENTAGE,
        state = "battery_minimum_capacity_gridtied",
        allowedtypes = HYBRID | GEN3,
        icon="mdi:battery-sync",
    ),
    SolaxModbusNumberEntityDescription( name = "Battery Charge Max Current", # multiple versions depending on GEN
        key = "battery_charge_max_current",
        register = 0x24,
        fmt = "f",
        native_min_value = 0,
        native_max_value = 20, # default (new default, was 50)
        native_step = 0.1,
        scale = 0.1,
        native_unit_of_measurement = ELECTRIC_CURRENT_AMPERE,
        allowedtypes = GEN3 | GEN4,
        max_exceptions = MAX_CURRENTS,
        icon="mdi:current-dc",
    ),
    SolaxModbusNumberEntityDescription( name = "Battery Charge Max Current", # multiple versions depending on GEN
        key = "battery_charge_max_current",
        register = 0x24,
        fmt = "f",
        native_min_value = 0,
        native_max_value = 20, # default (new default, was 50)
        native_step = 0.1,
        scale = 0.01,
        native_unit_of_measurement = ELECTRIC_CURRENT_AMPERE,
        allowedtypes = GEN2,
        max_exceptions = MAX_CURRENTS,
        icon="mdi:current-dc",
    ),
    SolaxModbusNumberEntityDescription( name = "Battery Discharge Max Current", 
        key = "battery_discharge_max_current",
        register = 0x25,
        fmt = "f",
        scale = 0.1,
        native_min_value = 0,
        native_max_value = 20, # universal default
        native_step = 0.1,
        native_unit_of_measurement = ELECTRIC_CURRENT_AMPERE,
        allowedtypes = GEN3 | GEN4,
        max_exceptions = MAX_CURRENTS,
        icon="mdi:current-dc",
    ),
    SolaxModbusNumberEntityDescription( name = "Battery Discharge Max Current", 
        key = "battery_discharge_max_current",
        register = 0x25,
        fmt = "f",
        scale = 0.01,
        native_min_value = 0,
        native_max_value = 20, # universal default
        native_step = 0.1,
        native_unit_of_measurement = ELECTRIC_CURRENT_AMPERE,
        allowedtypes = GEN2,
        max_exceptions = MAX_CURRENTS,
        icon="mdi:current-dc",
    ),
    SolaxModbusNumberEntityDescription( name = "Consume Off Power",
        key = "consume_off_power",
        register = 0xB9,
        fmt = "i",
        native_min_value = 0,
        native_max_value = 8000,
        native_step = 100,
        native_unit_of_measurement = POWER_WATT,
        allowedtypes = GEN4,
    ),
    SolaxModbusNumberEntityDescription( name = "Export Control User Limit",
        key = "export_control_user_limit", 
        register = 0x42,
        fmt = "i",
        native_min_value = 0,
        native_max_value = 2500,
        scale = 1, # GEN 2,3 scale
        native_step = 100,
        native_unit_of_measurement = POWER_WATT,
        read_scale_exceptions=EXPORT_LIMIT_SCALE_EXCEPTIONS,
        allowedtypes = GEN2 | GEN3 | GEN4 ,
        max_exceptions = MAX_EXPORT,
        icon="mdi:home-export-outline",
    ),
    SolaxModbusNumberEntityDescription( name = "External Generation Max Charge",
        key = "external_generation_max_charge", 
        register = 0xC8,
        fmt = "i",
        native_min_value = 0,
        native_max_value = 2500,
        scale = 1, # GEN 2,3 scale
        native_step = 100,
        native_unit_of_measurement = POWER_WATT,
        read_scale_exceptions=EXPORT_LIMIT_SCALE_EXCEPTIONS,
        allowedtypes = GEN4 ,
        max_exceptions = MAX_EXPORT,
    ),
    SolaxModbusNumberEntityDescription( name = "Feedin Discharge Min SOC",
        key = "feedin_discharge_min_soc",
        register = 0x65,
        fmt = "i",
        native_min_value = 10,
        native_max_value = 100,
        native_step = 1,
        native_unit_of_measurement = PERCENTAGE,
        allowedtypes = GEN4,
    ),
    SolaxModbusNumberEntityDescription( name = "Feedin Nightcharge Upper SOC",
        key = "feedin_nightcharge_upper_soc", 
        register = 0x64,
        fmt = "i",
        native_min_value = 10,
        native_max_value = 100,
        native_step = 1,
        native_unit_of_measurement = PERCENTAGE,
        allowedtypes = GEN4,
    ),
    SolaxModbusNumberEntityDescription( name = "Feedin On Power",
        key = "feedin_on_power",
        register = 0xB7,
        fmt = "i",
        native_min_value = 0,
        native_max_value = 8000,
        native_step = 100,
        native_unit_of_measurement = POWER_WATT,
        allowedtypes = GEN4,
    ),
    SolaxModbusNumberEntityDescription( name = "ForceTime Period 1 Max Capacity",
        key ="forcetime_period_1_max_capacity",
        register = 0xA4,
        fmt = "i",
        native_min_value = 5,
        native_max_value = 100,
        native_step = 1,
        native_unit_of_measurement = PERCENTAGE,
        allowedtypes = GEN3,
        icon="mdi:battery-sync",
    ),
    SolaxModbusNumberEntityDescription( name = "ForceTime Period 2 Max Capacity",
        key = "forcetime_period_2_max_capacity",
        register = 0xA5,
        fmt = "i",
        native_min_value = 5,
        native_max_value = 100,
        native_step = 1,
        native_unit_of_measurement = PERCENTAGE,
        allowedtypes = GEN3,
        icon="mdi:battery-sync",
    ),
    SolaxModbusNumberEntityDescription( name = "Grid Export Limit",
        key = "grid_export_limit", 
        register = 0x52,
        fmt = "i",
        native_min_value = -6000,
        native_max_value = 0,
        native_step = 100,
        native_unit_of_measurement = POWER_WATT,
        allowedtypes = GEN3 | HYBRID | AC,
        icon="mdi:home-export-outline",
    ),
    SolaxModbusNumberEntityDescription( name = "Grid Export Limit",
        key = "grid_export_limit", 
        register = 0x51,
        fmt = "i",
        native_min_value = -5000,
        native_max_value = 0,
        native_step = 100,
        native_unit_of_measurement = POWER_WATT,
        allowedtypes = GEN2,
        icon="mdi:home-export-outline",
    ),
    SolaxModbusNumberEntityDescription( name = "Maximum Per Day On",
        key ="maximum_per_day_on",
        register = 0xBC,
        fmt = "i",
        native_min_value = 5,
        native_max_value = 1200,
        native_step = 5,
        native_unit_of_measurement = TIME_MINUTES,
        allowedtypes = GEN4 | DCB,
    ),
    SolaxModbusNumberEntityDescription( name = "Minimum Per On Signal",
        key ="minimum_per_on_signal",
        register = 0xBB,
        fmt = "i",
        native_min_value = 5,
        native_max_value = 100,
        native_step = 1,
        native_unit_of_measurement = TIME_MINUTES,
        allowedtypes = GEN4 | DCB,
    ),
    SolaxModbusNumberEntityDescription( name = "Selfuse Backup SOC",
        key ="selfuse_backup_soc",
        register = 0xC5,
        fmt = "i",
        native_min_value = 10,
        native_max_value = 100,
        native_step = 1,
        native_unit_of_measurement = PERCENTAGE,
        entity_registry_enabled_default=False,
        allowedtypes = GEN4,
        icon="mdi:battery-sync",
    ),
    SolaxModbusNumberEntityDescription( name = "Selfuse Discharge Min SOC",
        key ="selfuse_discharge_min_soc",
        register = 0x61,
        fmt = "i",
        native_min_value = 10,
        native_max_value = 100,
        native_step = 1,
        native_unit_of_measurement = PERCENTAGE,
        allowedtypes = GEN4,
        icon="mdi:battery-sync",
    ),
    SolaxModbusNumberEntityDescription( name = "Selfuse Nightcharge Upper SOC",
        key = "selfuse_nightcharge_upper_soc", 
        register = 0x63,
        fmt = "i",
        native_min_value = 10,
        native_max_value = 100,
        native_step = 1,
        native_unit_of_measurement = PERCENTAGE,
        allowedtypes = GEN4,
        icon="mdi:battery-sync",
    ),
    SolaxModbusNumberEntityDescription( name = "Switch Off SOC",
        key = "switch_off_soc", 
        register = 0xBA,
        fmt = "i",
        native_min_value = 0,
        native_max_value = 100,
        native_step = 1,
        native_unit_of_measurement = PERCENTAGE,
        allowedtypes = GEN4 | DCB,
    ),
    SolaxModbusNumberEntityDescription( name = "Switch On SOC",
        key = "switch_on_soc", 
        register = 0xB8,
        fmt = "i",
        native_min_value = 0,
        native_max_value = 100,
        native_step = 1,
        native_unit_of_measurement = PERCENTAGE,
        allowedtypes = GEN4 | DCB,
    ),
]

# ================================= Select Declarations ============================================================


TIME_OPTIONS = {
    0: "00:00",
    256: "00:01",
    3840: "00:15",
    7680: "00:30",
    11520: "00:45",
    1: "01:00",
    3841: "01:15",
    7681: "01:30",
    11521: "01:45",
    2: "02:00",
    3842: "02:15",
    7682: "02:30",
    11522: "02:45",
    3: "03:00",
    3843: "03:15",
    7683: "03:30",
    11523: "03:45",
    4: "04:00",
    3844: "04:15",
    7684: "04:30",
    11524: "04:45",
    5: "05:00",
    3845: "05:15",
    7685: "05:30",
    11525: "05:45",
    6: "06:00",
    3846: "06:15",
    7686: "06:30",
    11526: "06:45",
    7: "07:00",
    3847: "07:15",
    7687: "07:30",
    11527: "07:45",
    8: "08:00",
    3848: "08:15",
    7688: "08:30",
    11528: "08:45",
    9: "09:00",
    3849: "09:15",
    7689: "09:30",
    11529: "09:45",
    10: "10:00",
    3850: "10:15",
    7690: "10:30",
    11530: "10:45",
    11: "11:00",
    3851: "11:15",
    7691: "11:30",
    11531: "11:45",
    12: "12:00",
    3852: "12:15",
    7692: "12:30",
    11532: "12:45",
    13: "13:00",
    3853: "13:15",
    7693: "13:30",
    11533: "13:45",
    14: "14:00",
    3854: "14:15",
    7694: "14:30",
    11534: "14:45",
    15: "15:00",
    3855: "15:15",
    7695: "15:30",
    11535: "15:45",
    16: "16:00",
    3856: "16:15",
    7696: "16:30",
    11536: "16:45",
    17: "17:00",
    3857: "17:15",
    7697: "17:30",
    11537: "17:45",
    18: "18:00",
    3858: "18:15",
    7698: "18:30",
    11538: "18:45",
    19: "19:00",
    3859: "19:15",
    7699: "19:30",
    11539: "19:45",
    20: "20:00",
    3860: "20:15",
    7700: "20:30",
    11540: "20:45",
    21: "21:00",
    3861: "21:15",
    7701: "21:30",
    11541: "21:45",
    22: "22:00",
    3862: "22:15",
    7702: "22:30",
    11542: "22:45",
    23: "23:00",
    3863: "23:15",
    7703: "23:30",
    11543: "23:45", 
    15127: "23:59", # default value for Gen4 discharger_end_time_1 , maybe not a default for Gen2,Gen3
}

TIME_OPTIONS_GEN4 = { 
    0: "00:00",
    1: "00:01",
    15: "00:15",
    30: "00:30",
    45: "00:45",
    256: "01:00",
    271: "01:15",
    286: "01:30",
    301: "01:45",
    512: "02:00",
    527: "02:15",
    542: "02:30",
    557: "02:45",
    768: "03:00",
    783: "03:15",
    798: "03:30",
    813: "03:45",
    1024: "04:00",
    1039: "04:15",
    1054: "04:30",
    1069: "04:45",
    1280: "05:00",
    1295: "05:15",
    1310: "05:30",
    1325: "05:45",
    1536: "06:00",
    1551: "06:15",
    1566: "06:30",
    1581: "06:45",
    1792: "07:00",
    1807: "07:15",
    1822: "07:30",
    1837: "07:45",
    2048: "08:00",
    2063: "08:15",
    2078: "08:30",
    2093: "08:45",
    2304: "09:00",
    2319: "09:15",
    2334: "09:30",
    2349: "09:45",
    2560: "10:00",
    2575: "10:15",
    2590: "10:30",
    2605: "10:45",
    2816: "11:00",
    2831: "11:15",
    2846: "11:30",
    2861: "11:45",
    3072: "12:00",
    3087: "12:15",
    3132: "12:30",
    3117: "12:45",
    3328: "13:00",
    3343: "13:15",
    3358: "13:30",
    3373: "13:45",
    3584: "14:00",
    3599: "14:15",
    3614: "14:30",
    3629: "14:45",
    3840: "15:00",
    3855: "15:15",
    3870: "15:30",
    3885: "15:45",
    4096: "16:00",
    4111: "16:15",
    4126: "16:30",
    4141: "16:45",
    4352: "17:00",
    4367: "17:15",
    4382: "17:30",
    4397: "17:45",
    4608: "18:00",
    4623: "18:15",
    4638: "18:30",
    4653: "18:45",
    4864: "19:00",
    4879: "19:15",
    4894: "19:30",
    4909: "19:45",
    5120: "20:00",
    5135: "20:15",
    5150: "20:30",
    5165: "20:45",
    5376: "21:00",
    5391: "21:15",
    5406: "21:30",
    5421: "21:45",
    5632: "22:00",
    5647: "22:15",
    5662: "22:30",
    5677: "22:45",
    5888: "23:00",
    5903: "23:15",
    5918: "23:30",
    5933: "23:45",
    5947: "23:59", # default value for discharger_end_time1
}

SELECT_TYPES = [
    SolaxModbusSelectEntityDescription( name = "Allow Grid Charge",
        key = "allow_grid_charge",
        register = 0x40,
        option_dict =  {
                0: "Both Forbidden",
                1: "Period 1 Allowed",
                2: "Period 2 Allowed",
                3: "Both Allowed",
            },
        allowedtypes = GEN2 | GEN3,
        icon="mdi:transmission-tower",
    ),
    SolaxModbusSelectEntityDescription( name = "Backup Grid Charge",
        key = "backup_gridcharge",
        register = 0x94,
        option_dict =  {
                0: "Disabled",
                1: "Enabled",
            },
        allowedtypes = GEN3,
        icon="mdi:transmission-tower",
    ),
    SolaxModbusSelectEntityDescription( name = "Charge and Discharge Period2 Enable",
        key = "charge_period2_enable",
        register = 0x6C,
        option_dict = {  
                0: "Disabled",
                1: "Enabled",
            },
        allowedtypes = GEN4,
        entity_category = EntityCategory.CONFIG,
        icon="mdi:battery-clock",
    ),
    SolaxModbusSelectEntityDescription( name = "Charger End Time 1",
        key = "charger_end_time_1",
        register = 0x27,
        option_dict = TIME_OPTIONS,
        allowedtypes = GEN2 | GEN3, 
        entity_category = EntityCategory.CONFIG,
        icon="mdi:battery-clock",
    ),
     SolaxModbusSelectEntityDescription( name = "Charger End Time 1",
        key = "charger_end_time_1",
        register = 0x69,
        option_dict = TIME_OPTIONS_GEN4,
        allowedtypes = GEN4, 
        entity_category = EntityCategory.CONFIG,
        icon="mdi:battery-clock",
    ),
    SolaxModbusSelectEntityDescription( name = "Charger End Time 2",
        key = "charger_end_time_2",
        register = 0x2B,
        option_dict = TIME_OPTIONS,
        allowedtypes = GEN2 | GEN3, 
        entity_category = EntityCategory.CONFIG,
        icon="mdi:battery-clock",
    ),
    SolaxModbusSelectEntityDescription( name = "Charger End Time 2",
        key = "charger_end_time_2",
        register = 0x6E,
        option_dict = TIME_OPTIONS_GEN4,
        allowedtypes = GEN4,
        entity_category = EntityCategory.CONFIG,
        icon="mdi:battery-clock",
    ),
    SolaxModbusSelectEntityDescription( name = "Charger Start Time 1",
        key = "charger_start_time_1",
        register = 0x26,
        option_dict = TIME_OPTIONS,
        allowedtypes = GEN2 | GEN3,
        entity_category = EntityCategory.CONFIG,
        icon="mdi:battery-clock",
    ),
    SolaxModbusSelectEntityDescription( name = "Charger Start Time 1",
        key = "charger_start_time_1",
        register = 0x68,
        option_dict = TIME_OPTIONS_GEN4,
        allowedtypes = GEN4,
        entity_category = EntityCategory.CONFIG,
        icon="mdi:battery-clock",
    ),
    SolaxModbusSelectEntityDescription( name = "Charger Start Time 2",
        key = "charger_start_time_2",
        register = 0x2A,
        option_dict = TIME_OPTIONS,
        allowedtypes = GEN2 | GEN3,
        entity_category = EntityCategory.CONFIG,
        icon="mdi:battery-clock",
    ),
    SolaxModbusSelectEntityDescription( name = "Charger Start Time 2",
        key = "charger_start_time_2",
        register = 0x6D,
        option_dict = TIME_OPTIONS_GEN4,
        allowedtypes = GEN4,
        entity_category = EntityCategory.CONFIG,
        icon="mdi:battery-clock",
    ),
    SolaxModbusSelectEntityDescription( name = "Charger Use Mode",
        key = "charger_use_mode",
        register = 0x1F,
        option_dict = {
            0: "Self Use Mode",
            1: "Force Time Use",
            2: "Back Up Mode",
        },
        allowedtypes = GEN2,
        icon="mdi:dip-switch",
    ),
    SolaxModbusSelectEntityDescription( name = "Charger Use Mode",
        key = "charger_use_mode",
        register = 0x1F,
        option_dict = {
            0: "Self Use Mode",
            1: "Force Time Use",
            2: "Back Up Mode",
            3: "Feedin Priority",
        },
        allowedtypes = GEN3,
        icon="mdi:dip-switch",
    ),
    SolaxModbusSelectEntityDescription( name = "Charger Use Mode",
        key = "charger_use_mode",
        register = 0x1F,
        option_dict = {
                0: "Self Use Mode",
                1: "Feedin Priority",
                2: "Back Up Mode",
                3: "Manual Mode",
            },
        allowedtypes = GEN4,
        icon="mdi:dip-switch",
    ),
    SolaxModbusSelectEntityDescription( name = "Cloud Control",
        key = "cloud_control",
        register = 0x99,
        option_dict =  {
                0: "Disabled",
                1: "Enabled",
            },
        allowedtypes = AC | HYBRID | GEN3,
        icon="mdi:cloud",
    ),
    SolaxModbusSelectEntityDescription( name = "Device Lock",
        key = "device_lock",
        register = 0xB5,
        option_dict =  {
                0: "Unlock",
                1: "Lock",
            },
        allowedtypes = GEN4,
        entity_category = EntityCategory.DIAGNOSTIC,
        icon="mdi:lock",
    ),
    SolaxModbusSelectEntityDescription( name = "Discharger End Time 1",
        key = "discharger_end_time_1",
        register = 0x29,
        option_dict = TIME_OPTIONS,
        allowedtypes = GEN2,
        entity_category = EntityCategory.CONFIG,
        icon="mdi:battery-clock",
    ),
    SolaxModbusSelectEntityDescription( name = "Discharger End Time 1",
        key = "discharger_end_time_1",
        register = 0x6B,
        option_dict = TIME_OPTIONS_GEN4,
        allowedtypes = GEN4,
        entity_category = EntityCategory.CONFIG,
        icon="mdi:battery-clock",
    ),
    SolaxModbusSelectEntityDescription( name = "Discharger End Time 2",
        key = "discharger_end_time_2",
        register = 0x2D,
        option_dict = TIME_OPTIONS,
        allowedtypes = GEN2,
        entity_category = EntityCategory.CONFIG,
        icon="mdi:battery-clock",
    ),
    SolaxModbusSelectEntityDescription( name = "Discharger End Time 2",
        key = "discharger_end_time_2",
        register = 0x70,
        option_dict = TIME_OPTIONS_GEN4,
        allowedtypes = GEN4, 
        entity_category = EntityCategory.CONFIG,
        icon="mdi:battery-clock",
    ),
    SolaxModbusSelectEntityDescription( name = "Discharger Start Time 1",
        key = "discharger_start_time_1",
        register = 0x28,
        option_dict = TIME_OPTIONS,
        allowedtypes = GEN2,
        entity_category = EntityCategory.CONFIG,
        icon="mdi:battery-clock",
    ),
    SolaxModbusSelectEntityDescription( name = "Discharger Start Time 1",
        key = "discharger_start_time_1",
        register = 0x6A,
        option_dict = TIME_OPTIONS_GEN4,
        allowedtypes = GEN4,
        entity_category = EntityCategory.CONFIG,
        icon="mdi:battery-clock",
    ),
    SolaxModbusSelectEntityDescription( name = "Discharger Start Time 2",
        key = "discharger_start_time_2",
        register = 0x2C,
        option_dict = TIME_OPTIONS,
        allowedtypes = GEN2,
        entity_category = EntityCategory.CONFIG,
        icon="mdi:battery-clock",
    ),
    SolaxModbusSelectEntityDescription( name = "Discharger Start Time 2",
        key = "discharger_start_time_2",
        register = 0x6F,
        option_dict = TIME_OPTIONS_GEN4,
        allowedtypes = GEN4,
        entity_category = EntityCategory.CONFIG,
        icon="mdi:battery-clock",
    ),
    SolaxModbusSelectEntityDescription( name = "Dry Contact Mode",
        key = "dry_contact_mode",
        register = 0xC3,
        option_dict =  {
                0: "Load Management",
                1: "Generator Control",
            },
        allowedtypes = GEN4 | DCB,
        icon="mdi:dip-switch",
    ),
    SolaxModbusSelectEntityDescription( name = "Export Duration",
        key = "export_duration",
        register = 0x9F,
        option_dict =  {
                4: "Default",
                900: "15 Minutes",
                1800: "30 Minutes",
                3600: "60 Minutes",
            },
        allowedtypes = GEN3 | HYBRID | AC,
        entity_category = EntityCategory.CONFIG,
        icon="mdi:home-export-outline",
    ),
    SolaxModbusSelectEntityDescription( name = "External Generation",
        key = "external_generation",
        register = 0xC7,
        option_dict =  {
                0: "Disabled",
                1: "Enabled",
            },
        allowedtypes = GEN4,
        icon="mdi:dip-switch",
    ),
    SolaxModbusSelectEntityDescription( name = "Lease Mode",
        key = "lease_mode",
        register = 0xB4,
        option_dict =  {
                0: "Disabled",
                1: "Enabled",
            },
        allowedtypes = GEN4,
        icon="mdi:dip-switch",
    ),
    
    SolaxModbusSelectEntityDescription( name = "Manual Mode Select",
        key = "manual_mode",
        register = 0x20,
        option_dict = {
                0: "Stop Charge and Discharge",
                1: "Force Charge",
                2: "Force Discharge",
            },
        allowedtypes = GEN4,
        icon="mdi:dip-switch",
    ),
    SolaxModbusSelectEntityDescription( name = "Manual Mode Control",
        key = "manual_mode_control",
        register = 0xB6,
        option_dict =  {
                0: "Off",
                1: "On",
            },
        allowedtypes = GEN4,
        icon="mdi:dip-switch",
    ),
    SolaxModbusSelectEntityDescription( name = "Parallel Setting",
        key = "parallel_setting",
        register = 0xC6,
        option_dict =  {
                0: "Free",
                1: "Master",
                2: "Slave",
            },
        allowedtypes = GEN4, 
        entity_category = EntityCategory.CONFIG,
        icon="mdi:dip-switch",
    ),
    SolaxModbusSelectEntityDescription( name = "Phase Power Balance X3",
        key = "phase_power_balance_x3",
        register = 0x9E,
        option_dict =  {
                0: "Disabled",
                1: "Enabled",
            },
        allowedtypes = GEN4 | GEN3 | X3,
        entity_category = EntityCategory.CONFIG,
        icon="mdi:dip-switch",
    ),
    SolaxModbusSelectEntityDescription( name = "Schedule",
        key = "schedule",
        register = 0xBD,
        option_dict =  {
                0: "Disabled",
                1: "Enabled",
            },
        allowedtypes = GEN4 | DCB,
        icon="mdi:dip-switch",
    ),
    SolaxModbusSelectEntityDescription( name = "Selfuse Mode Backup",
        key = "selfuse_mode_backup",
        register = 0xC4,
        option_dict =  {
                0: "Disabled",
                1: "Enabled",
            },
        allowedtypes = GEN4,
        icon="mdi:dip-switch",
    ),
    SolaxModbusSelectEntityDescription( name = "Selfuse Night Charge Enable",
        key = "selfuse_nightcharge_enable",
        register = 0x62,
        option_dict =  {
                0: "Disabled",
                1: "Enabled",
            },
        allowedtypes = GEN4,
        icon="mdi:dip-switch",
    ),
    SolaxModbusSelectEntityDescription( name = "Work End Time 1",
        key = "work_end_time_1",
        register = 0xBF,
        option_dict = TIME_OPTIONS_GEN4,
        allowedtypes = GEN4 | DCB,
        entity_category = EntityCategory.CONFIG,
        icon="mdi:home-clock",
    ),
    SolaxModbusSelectEntityDescription( name = "Work End Time 2",
        key = "work_end_time_2",
        register = 0xC1,
        option_dict = TIME_OPTIONS_GEN4,
        allowedtypes = GEN4 | DCB,
        entity_category = EntityCategory.CONFIG,
        icon="mdi:home-clock",
    ),
    SolaxModbusSelectEntityDescription( name = "Work Mode",
        key = "work_mode",
        register = 0xC2,
        option_dict = {
                0: "Disabled",
                1: "Manual",
                2: "Smart Save",
            },
        allowedtypes = GEN4 | DCB,
        icon="mdi:dip-switch",
    ),
    SolaxModbusSelectEntityDescription( name = "Work Start Time 1",
        key = "work_start_time_1",
        register = 0xBE,
        option_dict = TIME_OPTIONS_GEN4,
        allowedtypes = GEN4 | DCB,
        entity_category = EntityCategory.CONFIG,
        icon="mdi:home-clock",
    ),
    SolaxModbusSelectEntityDescription( name = "Work Start Time 2",
        key = "work_start_time_2",
        register = 0xC0,
        option_dict = TIME_OPTIONS_GEN4,
        allowedtypes = GEN4 | DCB,
        entity_category = EntityCategory.CONFIG,
        icon="mdi:home-clock",
    ),
]


# ================================= Sennsor Declarations ============================================================


SENSOR_TYPES_MAIN: list[SolaXModbusSensorEntityDescription] = [ 
    SolaXModbusSensorEntityDescription(
        name="Allow Grid Charge",
        key="allow_grid_charge",
        register = 0xB4,
        scale = { 0: "Both Forbidden", 1: "Period 1 Allowed", 2: "Period 2 Allowed", 3: "Both Allowed",},
        entity_registry_enabled_default=False,
        allowedtypes= GEN2 | GEN3,
        icon="mdi:transmission-tower",
    ),
    SolaXModbusSensorEntityDescription(
        name="Battery Capacity",
        key="battery_capacity_charge",
        native_unit_of_measurement=PERCENTAGE,
        device_class=DEVICE_CLASS_BATTERY,
        register = 0x1C,
        register_type = REG_INPUT,
        allowedtypes= GEN2 | GEN3 | GEN4, 
    ),
    SolaXModbusSensorEntityDescription(
        name="Battery Charge Max Current",
        key="battery_charge_max_current",
        native_unit_of_measurement=ELECTRIC_CURRENT_AMPERE,
        register = 0x90,
        scale=0.01,
        allowedtypes= GEN2,
        icon="mdi:current-dc",
    ),
    SolaXModbusSensorEntityDescription(
        name="Battery Charge Max Current",
        key="battery_charge_max_current",
        native_unit_of_measurement=ELECTRIC_CURRENT_AMPERE,
        register = 0x90,
        scale=0.1,
        allowedtypes= GEN3 | GEN4,
        icon="mdi:current-dc",
    ),
    SolaXModbusSensorEntityDescription(
        name="Battery Current Charge",
        key="battery_current_charge",
        native_unit_of_measurement=ELECTRIC_CURRENT_AMPERE,
        device_class=DEVICE_CLASS_CURRENT,
        register = 0x15,
        scale = 0.01,
        register_type = REG_INPUT,
        unit = REGISTER_S16,
        allowedtypes= GEN2,
        icon="mdi:current-dc",
    ),
    SolaXModbusSensorEntityDescription(
        name="Battery Current Charge",
        key="battery_current_charge",
        native_unit_of_measurement=ELECTRIC_CURRENT_AMPERE,
        device_class=DEVICE_CLASS_CURRENT,
        register = 0x15,
        scale = 0.1,
        register_type = REG_INPUT,
        unit = REGISTER_S16,
        allowedtypes= GEN3 | GEN4,
        icon="mdi:current-dc",
    ),
    SolaXModbusSensorEntityDescription(
        name="Battery Discharge Cut Off Voltage",
        key="battery_discharge_cut_off_voltage",
        native_unit_of_measurement=ELECTRIC_POTENTIAL_VOLT,
        device_class=DEVICE_CLASS_VOLTAGE,
        register = 0x8F,
        scale=0.01,
        entity_registry_enabled_default=False,
        allowedtypes= GEN2,
    ),
    SolaXModbusSensorEntityDescription(
        name="Battery Discharge Cut Off Voltage",
        key="battery_discharge_cut_off_voltage",
        native_unit_of_measurement=ELECTRIC_POTENTIAL_VOLT,
        device_class=DEVICE_CLASS_VOLTAGE,
        register = 0x8F,
        scale=0.1,
        entity_registry_enabled_default=False,
        allowedtypes= GEN3 | GEN4,
    ),
    SolaXModbusSensorEntityDescription(
        name="Battery Discharge Max Current",
        key="battery_discharge_max_current",
        native_unit_of_measurement=ELECTRIC_CURRENT_AMPERE,
        entity_registry_enabled_default=False,
        register = 0x91,
        scale=0.01,
        allowedtypes= GEN2,
        icon="mdi:current-dc",
    ),
    SolaXModbusSensorEntityDescription(
        name="Battery Discharge Max Current",
        key="battery_discharge_max_current",
        native_unit_of_measurement=ELECTRIC_CURRENT_AMPERE,
        entity_registry_enabled_default=False,
        register = 0x91,
        scale=0.1,
        allowedtypes= GEN3 | GEN4,
        icon="mdi:current-dc",
    ),
    SolaXModbusSensorEntityDescription(
        name="Battery Install Capacity",
        key="battery_install_capacity",
        native_unit_of_measurement=ENERGY_KILO_WATT_HOUR,
        entity_registry_enabled_default=False,
        register = 0xE8,
        scale = 0.1,
        rounding = 1,
        allowedtypes= GEN3,
        entity_category = EntityCategory.DIAGNOSTIC,
        icon="mdi:battery-sync",
        blacklist=('XRE',)
    ),
    SolaXModbusSensorEntityDescription(
        name="Battery Minimum Capacity",
        key="battery_minimum_capacity",
        native_unit_of_measurement=PERCENTAGE,
        register = 0x8C,
        entity_registry_enabled_default=False,
        allowedtypes= GEN2 | GEN3,
        icon="mdi:battery-sync",
    ),
    SolaXModbusSensorEntityDescription(
        name="Battery Minimum Capacity - Grid-tied",
        key="battery_minimum_capacity_gridtied",
        native_unit_of_measurement=PERCENTAGE,
        register = 0x112,
        entity_registry_enabled_default=False,
        allowedtypes= HYBRID | GEN3, 
        icon="mdi:battery-sync",
    ),
    SolaXModbusSensorEntityDescription(
        name="Battery Package Number",
        key="battery_package_number",
        register = 0x22,
        register_type=REG_INPUT,
        entity_registry_enabled_default=False,
        allowedtypes= GEN2,
    ),
    SolaXModbusSensorEntityDescription(
        name="Battery Power Charge",
        key="battery_power_charge",
        native_unit_of_measurement=POWER_WATT,
        device_class=DEVICE_CLASS_POWER,
        state_class=STATE_CLASS_MEASUREMENT,
        register = 0x16,
        register_type = REG_INPUT,
        unit = REGISTER_S16,
        allowedtypes= GEN2 | GEN3 | GEN4,
    ),
    SolaXModbusSensorEntityDescription(
        name="Battery State of Health",
        key="battery_soh",
        icon="mdi:battery-heart",
        register = 0x23,
        register_type=REG_INPUT,
        native_unit_of_measurement=PERCENTAGE,
        entity_registry_enabled_default=False,
        allowedtypes= GEN2,
    ),
    SolaXModbusSensorEntityDescription(
        name="Battery Type",
        key="battery_type",
        register = 0x8D,
        scale = { 0: "Lead Acid",
                  1: "Lithium", },
        entity_registry_enabled_default=False,
        allowedtypes= GEN2 | GEN3 | GEN4,
        entity_category = EntityCategory.DIAGNOSTIC,
        icon="mdi:battery-unknown",
    ),
    SolaXModbusSensorEntityDescription(
        name="Battery Charge Float Voltage",
        key="battery_charge_float_voltage",
        native_unit_of_measurement=ELECTRIC_POTENTIAL_VOLT,
        device_class=DEVICE_CLASS_VOLTAGE,
        register = 0x8E,
        scale=0.01,
        entity_registry_enabled_default=False,
        allowedtypes= GEN2,
    ),
    SolaXModbusSensorEntityDescription(
        name="Battery Charge Float Voltage",
        key="battery_charge_float_voltage",
        native_unit_of_measurement=ELECTRIC_POTENTIAL_VOLT,
        device_class=DEVICE_CLASS_VOLTAGE,
        register = 0x8E,
        scale=0.1,
        entity_registry_enabled_default=False,
        allowedtypes= GEN3 | GEN4,
    ),
    SolaXModbusSensorEntityDescription(
        name="Battery Input Energy Total", 
        key="input_energy_charge",
        native_unit_of_measurement=ENERGY_KILO_WATT_HOUR,
        icon="mdi:battery-arrow-up",
        register = 0x21,
        register_type=REG_INPUT,
        scale=0.1,
        unit = REGISTER_U32, #REGISTER_ULSB16MSB16,
        device_class=DEVICE_CLASS_ENERGY,
        state_class=STATE_CLASS_TOTAL_INCREASING,
        entity_registry_enabled_default=False,
        allowedtypes= GEN3 | GEN4,
    ),
    SolaXModbusSensorEntityDescription(
        name="Battery Input Energy Total", 
        key="input_energy_charge",
        native_unit_of_measurement=ENERGY_KILO_WATT_HOUR,
        icon="mdi:battery-arrow-up",
        register = 0x20,
        register_type=REG_INPUT,
        scale=0.1,
        unit = REGISTER_U32, # REGISTER_ULSB16MSB16,
        device_class=DEVICE_CLASS_ENERGY,
        state_class=STATE_CLASS_TOTAL_INCREASING,
        entity_registry_enabled_default=False,
        allowedtypes= GEN2,
    ),
    SolaXModbusSensorEntityDescription(
        name="Battery Output Energy Total", # Need revisit these
        key="output_energy_charge",
        native_unit_of_measurement=ENERGY_KILO_WATT_HOUR,
        icon="mdi:battery-arrow-down",
        register = 0x1D,
        register_type=REG_INPUT,
        scale = 0.1,
        unit = REGISTER_U32,# REGISTER_ULSB16MSB16,
        device_class=DEVICE_CLASS_ENERGY,
        state_class=STATE_CLASS_TOTAL_INCREASING,
        entity_registry_enabled_default=False,
        allowedtypes= GEN2 | GEN3 | GEN4,
    ),
    SolaXModbusSensorEntityDescription(
        name="Battery Temperature",
        key="battery_temperature",
        native_unit_of_measurement=TEMP_CELSIUS,
        device_class=DEVICE_CLASS_TEMPERATURE,
        state_class=STATE_CLASS_MEASUREMENT,
        register = 0x18,
        register_type = REG_INPUT,
        unit = REGISTER_S16,
        allowedtypes= GEN2 | GEN3 | GEN4,
        entity_category = EntityCategory.DIAGNOSTIC,
    ),
    SolaXModbusSensorEntityDescription(
        name="Battery Voltage Charge",
        key="battery_voltage_charge",
        native_unit_of_measurement=ELECTRIC_POTENTIAL_VOLT,
        device_class=DEVICE_CLASS_VOLTAGE,
        register = 0x14,
        scale = 0.01,
        register_type = REG_INPUT,
        unit = REGISTER_S16,
        allowedtypes= GEN2,
    ),
    SolaXModbusSensorEntityDescription(
        name="Battery Voltage Charge",
        key="battery_voltage_charge",
        native_unit_of_measurement=ELECTRIC_POTENTIAL_VOLT,
        device_class=DEVICE_CLASS_VOLTAGE,
        register = 0x14,
        scale = 0.1,
        register_type = REG_INPUT,
        unit = REGISTER_S16,
        allowedtypes= GEN3 | GEN4,
    ),
    SolaXModbusSensorEntityDescription(
        name="Battery Volt Fault Val",
        key="battery_volt_fault_val",
        native_unit_of_measurement=ELECTRIC_POTENTIAL_VOLT,
        device_class=DEVICE_CLASS_VOLTAGE,
        register = 0x69,
        register_type = REG_INPUT,
        scale = 0.1, # GEN2 0.01
        rounding = 1,
        entity_registry_enabled_default=False,
        allowedtypes= GEN3 | GEN4,
    ),
    # Gen 3 & Gen4 only
    SolaXModbusSensorEntityDescription(
        name="BMS Charge Max Current",
        key="bms_charge_max_current",
        native_unit_of_measurement=ELECTRIC_CURRENT_AMPERE,
        entity_registry_enabled_default=False,
        register = 0x24,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes= GEN3 | GEN4,
        icon="mdi:current-dc",
    ),
    # Gen3 & Gen4 only, this is a different sensors on Gen2
    SolaXModbusSensorEntityDescription(
        name="BMS Connect State", 
        key="bms_connect_state",
        entity_registry_enabled_default=False,
        register = 0x17,
        scale = { 0: "Disconnected",
                  1: "Connected",   },
        register_type = REG_INPUT,
        allowedtypes= GEN3 | GEN4,
        icon="mdi:state-machine",
    ),
    # Gen3 & Gen4 only
    SolaXModbusSensorEntityDescription(
        name="BMS Discharge Max Current",
        key="bms_discharge_max_current",
        native_unit_of_measurement=ELECTRIC_CURRENT_AMPERE,
        entity_registry_enabled_default=False,
        register = 0x25,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes= GEN3 | GEN4,
        icon="mdi:current-dc",
    ),
    SolaXModbusSensorEntityDescription(
        name="Bus Volt",
        key="bus_volt",
        native_unit_of_measurement=ELECTRIC_POTENTIAL_VOLT,
        device_class=DEVICE_CLASS_VOLTAGE,
        entity_registry_enabled_default=False,
        register = 0x66,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes= GEN3 | GEN4,
    ),
    SolaXModbusSensorEntityDescription(
        name="Charger Start Time 1", 
        key="charger_start_time_1",
        register = 0x97,
        scale = value_function_gen4time,
        entity_registry_enabled_default=False,
        allowedtypes= GEN4,
        icon="mdi:battery-clock",
    ),
    SolaXModbusSensorEntityDescription(
        name="Charger Start Time 1", 
        key="charger_start_time_1",
        register = 0x92,
        unit = REGISTER_WORDS,
        wordcount = 2,
        scale = value_function_gen23time,
        entity_registry_enabled_default=False,
        allowedtypes= GEN2 | GEN3,
        icon="mdi:battery-clock",
    ),
    SolaXModbusSensorEntityDescription(
        name="Charger End Time 1", 
        key="charger_end_time_1",
        register = 0x98,
        scale = value_function_gen4time,
        entity_registry_enabled_default=False,
        allowedtypes= GEN4,
        icon="mdi:battery-clock",
    ),
    SolaXModbusSensorEntityDescription(
        name="Charger End Time 1", 
        key="charger_end_time_1",
        register = 0x94,
        unit = REGISTER_WORDS,
        wordcount = 2,
        scale = value_function_gen23time,
        entity_registry_enabled_default=False,
        allowedtypes= GEN2 | GEN3,
        icon="mdi:battery-clock",
    ),
    SolaXModbusSensorEntityDescription(
        name="Charger Start Time 2", 
        key="charger_start_time_2",
        register = 0x9C,
        scale = value_function_gen4time,
        entity_registry_enabled_default=False,
        allowedtypes= GEN4,
        icon="mdi:battery-clock",
    ),
    SolaXModbusSensorEntityDescription(
        name="Charger Start Time 2", 
        key="charger_start_time_2",
        register = 0x9A,
        unit = REGISTER_WORDS,
        wordcount = 2,
        scale = value_function_gen23time,
        entity_registry_enabled_default=False,
        allowedtypes= GEN2 | GEN3,
        icon="mdi:battery-clock",
    ),
    SolaXModbusSensorEntityDescription(
        name="Charger End Time 2",
        key="charger_end_time_2",
        register = 0x9D,
        scale = value_function_gen4time,
        entity_registry_enabled_default=False,
        allowedtypes= GEN4,
        icon="mdi:battery-clock",
    ),
    SolaXModbusSensorEntityDescription(
        name="Charger End Time 2",
        key="charger_end_time_2",
        register = 0x9C,
        unit = REGISTER_WORDS,
        wordcount = 2,
        scale = value_function_gen23time,
        entity_registry_enabled_default=False,
        allowedtypes= GEN2 | GEN3,
        icon="mdi:battery-clock",
    ),
    SolaXModbusSensorEntityDescription(
        name="Charger Use Mode",
        key="charger_use_mode",
        register = 0x8B,
        scale = { 0: "Self Use Mode",
            1: "Feedin Priority",
            2: "Back Up Mode",
            3: "Manual Mode", },
        entity_registry_enabled_default=False,
        allowedtypes= GEN4,
        icon="mdi:dip-switch",
    ),
        SolaXModbusSensorEntityDescription(
        name="Charger Use Mode",
        key="charger_use_mode",
        register = 0x8B,
        scale = { 0: "Self Use Mode",
            1: "Force Time Use",
            2: "Back Up Mode",
            3: "Feedin Priority", },
        entity_registry_enabled_default=False,
        allowedtypes= GEN2 | GEN3,
        icon="mdi:dip-switch",
    ),
    SolaXModbusSensorEntityDescription(
        name="Consume Off Power",
        key="consume_off_power",
        native_unit_of_measurement=POWER_WATT,
        device_class=DEVICE_CLASS_POWER,
        state_class=STATE_CLASS_MEASUREMENT,
        register = 0x125,
        entity_registry_enabled_default=False,
        allowedtypes=GEN4,
    ),
    SolaXModbusSensorEntityDescription(
        name="Grid Import Total",
        key="grid_import_total",
        native_unit_of_measurement=ENERGY_KILO_WATT_HOUR,
        device_class=DEVICE_CLASS_ENERGY,
        state_class=STATE_CLASS_TOTAL_INCREASING,
        entity_registry_enabled_default=False,
        register = 0x4A,
        unit = REGISTER_U32,
        register_type = REG_INPUT,
        scale = 0.01,
        rounding = 2,
        allowedtypes= GEN2 | GEN3 | GEN4,
        icon="mdi:home-import-outline",
    ),
    SolaXModbusSensorEntityDescription(
        name="DC Fault Val",
        key="dc_fault_val",
        native_unit_of_measurement=ELECTRIC_POTENTIAL_VOLT,
        device_class=DEVICE_CLASS_VOLTAGE,
        entity_registry_enabled_default=False,
        register = 0x67,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes= GEN3 | GEN4,
    ),
    SolaXModbusSensorEntityDescription(
        name="Device Lock",
        key="device_lock",
        register = 0x121,
        scale = { 0: "Unlock",
                  1: "Lock", },
        entity_registry_enabled_default=False,
        allowedtypes=GEN4,
    ),
    SolaXModbusSensorEntityDescription(
        name="Discharger Start Time 1", 
        key="discharger_start_time_1",
        register = 0x99,
        scale = value_function_gen4time,
        entity_registry_enabled_default=False,
        allowedtypes= GEN2 | GEN4,
        icon="mdi:battery-clock",
    ),
    SolaXModbusSensorEntityDescription(
        name="Discharger End Time 1", # 
        key="discharger_end_time_1",
        register = 0x9A,
        scale = value_function_gen4time,
        entity_registry_enabled_default=False,
        allowedtypes= GEN2 | GEN4,
        icon="mdi:battery-clock",
    ),
    SolaXModbusSensorEntityDescription(
        name="Discharger Start Time 2", 
        key="discharger_start_time_2",
        register = 0x9E,
        scale = value_function_gen4time,
        entity_registry_enabled_default=False,
        allowedtypes= GEN2 | GEN4,
        icon="mdi:battery-clock",
    ),
    SolaXModbusSensorEntityDescription(
        name="Discharger End Time 2",
        key="discharger_end_time_2",
        register = 0x9F,
        scale = value_function_gen4time,
        entity_registry_enabled_default=False,
        allowedtypes= GEN2 | GEN4,
        icon="mdi:battery-clock",
    ),
    SolaXModbusSensorEntityDescription(
        name="Dry Contact Mode",
        key="dry_contact_mode",
        register = 0x12F,
        scale = { 0: "Load Management",
                  1: "Generator Control", },
        entity_registry_enabled_default=False,
        allowedtypes=GEN4,
    ),
    SolaXModbusSensorEntityDescription(
        name="Today's Yield",
        key="today_yield",
        native_unit_of_measurement=ENERGY_KILO_WATT_HOUR,
        device_class=DEVICE_CLASS_ENERGY,
        state_class=STATE_CLASS_TOTAL_INCREASING,
        register = 0x50,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 2, # GEN4 might be 1
        allowedtypes= GEN3 | GEN4 | GEN | HYBRID,
    ),
    SolaXModbusSensorEntityDescription(
        name="Export Control Factory Limit",
        key="export_control_factory_limit",
        native_unit_of_measurement=POWER_WATT,
        register = 0xB5,
        entity_registry_enabled_default=False,
        allowedtypes= GEN2 | GEN3 | GEN4,
        icon="mdi:home-export-outline",
    ),
    SolaXModbusSensorEntityDescription(
        name="Export Control User Limit",
        key="export_control_user_limit",
        native_unit_of_measurement=POWER_WATT,
        register = 0xB6,
        entity_registry_enabled_default=False,
        allowedtypes= GEN2 | GEN3 | GEN4,
        read_scale_exceptions=EXPORT_LIMIT_SCALE_EXCEPTIONS,
        icon="mdi:home-export-outline",
    ),
    SolaXModbusSensorEntityDescription(
        name="External Generation",
        key="external_generation",
        register = 0x131,
        scale = { 0: "Disabled",
                  1: "Enabled", },
        entity_registry_enabled_default=False,
        allowedtypes=GEN4,
    ),
    SolaXModbusSensorEntityDescription(
        name="External Generation Max Charge",
        key="external_generation_max_charge",
        native_unit_of_measurement=POWER_WATT,
        register = 0x132,
        entity_registry_enabled_default=False,
        allowedtypes=GEN4,
    ),
    SolaXModbusSensorEntityDescription(
        name="Grid Export Limit",
        key="grid_export_limit",
        register = 0x9C,
        register_type = REG_INPUT,
        unit = REGISTER_S32,
        entity_registry_enabled_default=False,
        allowedtypes = GEN3 | HYBRID | AC,
        icon="mdi:home-export-outline",
    ),
    SolaXModbusSensorEntityDescription(
        name="Grid Export Total",
        key="grid_export_total",
        native_unit_of_measurement=ENERGY_KILO_WATT_HOUR,
        device_class=DEVICE_CLASS_ENERGY,
        state_class=STATE_CLASS_TOTAL_INCREASING,
        entity_registry_enabled_default=False,
        register = 0x48,
        register_type = REG_INPUT,
        unit = REGISTER_S32, #Shouldn't this be UINT?
        scale = 0.01,
        rounding = 2,
        allowedtypes= GEN2 | GEN3 | GEN4,
        icon="mdi:home-export-outline",
    ),
    SolaXModbusSensorEntityDescription(
        name="Measured Power",
        key="feedin_power",
        native_unit_of_measurement=POWER_WATT,
        device_class=DEVICE_CLASS_POWER,
        state_class=STATE_CLASS_MEASUREMENT,
        register = 0x46,
        register_type = REG_INPUT,
        unit = REGISTER_S32,
        allowedtypes= GEN2 | GEN3 | GEN4 | GEN | HYBRID,
    ),
    SolaXModbusSensorEntityDescription(
        name="Feedin On Power",
        key="feedin_on_power",
        native_unit_of_measurement=POWER_WATT,
        device_class=DEVICE_CLASS_POWER,
        state_class=STATE_CLASS_MEASUREMENT,
        register = 0x123,
        entity_registry_enabled_default=False,
        allowedtypes=GEN4,
    ),
    SolaXModbusSensorEntityDescription(
        name="Firmware Version Inverter Master",
        key="firmwareversion_invertermaster",
        entity_registry_enabled_default=False,
        register = 0x7D,
        allowedtypes= GEN2 | GEN3 | GEN4,
        entity_category = EntityCategory.DIAGNOSTIC,
        icon="mdi:information",
    ),
    SolaXModbusSensorEntityDescription(
        name="Firmware Version Manager",
        key="firmwareversion_manager",
        entity_registry_enabled_default=False,
        allowedtypes= GEN2 | GEN3 | GEN4,
        register = 0x83,
        entity_category = EntityCategory.DIAGNOSTIC,
        icon="mdi:information",
    ),
    SolaXModbusSensorEntityDescription(
        name="Firmware Version Modbus TCP Major",
        key="firmwareversion_modbustcp_major",
        entity_registry_enabled_default=False,
        register = 0x81,
        allowedtypes= GEN2 | GEN3 | GEN4,
        entity_category = EntityCategory.DIAGNOSTIC,
        icon="mdi:information",
    ),
    SolaXModbusSensorEntityDescription(
        name="Firmware Version Modbus TCP Minor",
        key="firmwareversion_modbustcp_minor",
        entity_registry_enabled_default=False,
        allowedtypes= GEN2 | GEN3 | GEN4,
        register = 0x82,
        entity_category = EntityCategory.DIAGNOSTIC,
        icon="mdi:information",
    ),
    SolaXModbusSensorEntityDescription(
        name="FVRT Function",
        key="fvrt_function",
        register = 0x116,
        scale = { 0: "Disabled",
                  1: "Enabled", },
        entity_registry_enabled_default=False,
        allowedtypes= GEN4,
    ),
    SolaXModbusSensorEntityDescription(
        name="FVRT Vac Upper",
        key="fvrt_vac_upper",
        native_unit_of_measurement=ELECTRIC_POTENTIAL_VOLT,
        device_class=DEVICE_CLASS_VOLTAGE,
        register = 0x117,
        scale = 0.1,
        rounding = 1,
        entity_registry_enabled_default=False,
        allowedtypes= GEN4,
    ),
    SolaXModbusSensorEntityDescription(
        name="FVRT Vac Lower",
        key="fvrt_vac_lower",
        native_unit_of_measurement=ELECTRIC_POTENTIAL_VOLT,
        device_class=DEVICE_CLASS_VOLTAGE,
        register = 0x118,
        scale = 0.1,
        rounding = 1,
        entity_registry_enabled_default=False,
        allowedtypes= GEN4,
    ),
    SolaXModbusSensorEntityDescription(
        name="Inverter Frequency",
        key="grid_frequency",
        native_unit_of_measurement=FREQUENCY_HERTZ,
        device_class=DEVICE_CLASS_FREQUENCY,
        register = 0x7,
        scale = 0.01,
        rounding = 2,
        register_type = REG_INPUT,
        allowedtypes= GEN2 | GEN3 | GEN4,
    ),
    SolaXModbusSensorEntityDescription(
        name="Inverter Frequency R",
        key="grid_frequency_r",
        native_unit_of_measurement=FREQUENCY_HERTZ,
        device_class=DEVICE_CLASS_FREQUENCY,
        register = 0x6D,
        register_type = REG_INPUT,
        scale = 0.01,
        rounding = 1,
        allowedtypes= X3 | GEN3 | GEN4,
    ),
    SolaXModbusSensorEntityDescription(
        name="Inverter Frequency S",
        key="grid_frequency_s",
        native_unit_of_measurement=FREQUENCY_HERTZ,
        device_class=DEVICE_CLASS_FREQUENCY,
        register = 0x71,
        register_type = REG_INPUT,
        scale = 0.01,
        rounding = 1,
        allowedtypes= X3 | GEN3 | GEN4,
    ),
    SolaXModbusSensorEntityDescription(
        name="Inverter Frequency T",
        key="grid_frequency_t",
        native_unit_of_measurement=FREQUENCY_HERTZ,
        device_class=DEVICE_CLASS_FREQUENCY,
        register = 0x75,
        register_type = REG_INPUT,
        scale = 0.01,
        rounding = 1,
        allowedtypes= X3 | GEN3 | GEN4,
    ),
    SolaXModbusSensorEntityDescription(
        name="Grid Import",
        key="grid_import",
        native_unit_of_measurement=POWER_WATT,
        device_class=DEVICE_CLASS_POWER,
        state_class=STATE_CLASS_MEASUREMENT,
        value_function = value_function_grid_import,
        allowedtypes= GEN2 | GEN3 | GEN4,
        icon="mdi:home-import-outline",
    ),
    SolaXModbusSensorEntityDescription(
        name="Grid Export",
        key="grid_export",
        native_unit_of_measurement=POWER_WATT,
        device_class=DEVICE_CLASS_POWER,
        state_class=STATE_CLASS_MEASUREMENT,
        value_function = value_function_grid_export,
        allowedtypes= GEN2 | GEN3 | GEN4,
        icon="mdi:home-export-outline",
    ),
    SolaXModbusSensorEntityDescription(
        name="House Load",
        key="house_load",
        value_function = value_function_house_load,
        native_unit_of_measurement=POWER_WATT,
        device_class=DEVICE_CLASS_POWER,
        state_class=STATE_CLASS_MEASUREMENT,
        allowedtypes= GEN2 | GEN3 | GEN4,
        icon="mdi:home",
    ),    
    SolaXModbusSensorEntityDescription(
        name="Inverter Voltage",
        key="inverter_voltage",
        native_unit_of_measurement=ELECTRIC_POTENTIAL_VOLT,
        device_class=DEVICE_CLASS_VOLTAGE,
        register = 0x0,
        scale = 0.1,
        register_type = REG_INPUT,
        rounding = 1,
        allowedtypes= GEN2 | GEN3 | GEN4,
    ),
    SolaXModbusSensorEntityDescription(
        name="Inverter Current",
        key="inverter_current",
        native_unit_of_measurement=ELECTRIC_CURRENT_AMPERE,
        device_class=DEVICE_CLASS_CURRENT,
        register = 0x1,
        scale = 0.1,
        register_type = REG_INPUT,
        unit = REGISTER_S16,
        rounding = 1,
        allowedtypes= GEN2 | GEN3 | GEN4,
    ),
    SolaXModbusSensorEntityDescription(
        name="Inverter Model Number",
        key="inverter_model_number",
        register=0xE9,
        unit=REGISTER_STR,
        wordcount=10,
        allowedtypes= GEN3,
        entity_registry_enabled_default=False,
        entity_category = EntityCategory.DIAGNOSTIC,
        icon="mdi:information",
        blacklist=('XRE',)
    ),
    SolaXModbusSensorEntityDescription(
        name="Inverter Power",
        key="inverter_load",
        native_unit_of_measurement=POWER_WATT,
        device_class=DEVICE_CLASS_POWER,
        state_class=STATE_CLASS_MEASUREMENT,
        register = 0x2,
        register_type = REG_INPUT,
        unit = REGISTER_S16,
        allowedtypes= GEN2 | GEN3 | GEN4,
    ),
    SolaXModbusSensorEntityDescription(
        name="Inverter Temperature",
        key="inverter_temperature",
        native_unit_of_measurement=TEMP_CELSIUS,
        device_class=DEVICE_CLASS_TEMPERATURE,
        state_class=STATE_CLASS_MEASUREMENT,
        register = 0x8,
        register_type = REG_INPUT,
        unit = REGISTER_S16,
        allowedtypes=ALLDEFAULT,
        entity_category = EntityCategory.DIAGNOSTIC,
    ),
    SolaXModbusSensorEntityDescription(
        name="Language",
        key="language",
        register = 0xBB,
        scale = { 0: "English",
                  1: "Deutsche",
                  2: "Francais",
                  2: "Polskie", },
        entity_registry_enabled_default=False,
        allowedtypes= GEN2 | GEN3 | GEN4,
        icon="mdi:translate-variant",
    ),
    SolaXModbusSensorEntityDescription(
        name="Lease Mode",
        key="lease_mode",
        register = 0x120,
        scale = { 0: "Disabled",
                  1: "Enabled", },
        entity_registry_enabled_default=False,
        allowedtypes=GEN4,
    ),
    SolaXModbusSensorEntityDescription(
        name="Lock State",
        key="lock_state",
        entity_registry_enabled_default=False,
        register = 0x54,
        scale = { 0: "Locked",
                  1: "Unlocked",
                  2: "Unlocked - Advanced", },
        register_type = REG_INPUT,
        allowedtypes= GEN2 | GEN3 | GEN4,
        icon="mdi:lock",
    ),
    SolaXModbusSensorEntityDescription(
        name="Bootloader Version",
        key="bootloader_version",
        entity_registry_enabled_default=False,
        allowedtypes= GEN2 | GEN3 | GEN4,
        register = 0x84,
        entity_category = EntityCategory.DIAGNOSTIC,
        icon="mdi:information",
    ),
    SolaXModbusSensorEntityDescription(
        name="Modbus Power Control",
        key="modbus_power_control",
        register = 0xA6,
        scale = { 0: "Disabled",
                  1: "Total",
                  2: "Split Phase", },
        allowedtypes= GEN3,
        entity_category = EntityCategory.DIAGNOSTIC,
        icon="mdi:dip-switch",
    ),
    SolaXModbusSensorEntityDescription(
        name="Manual Mode Control",
        key="manual_mode_control",
        register = 0x122,
        scale = { 0: "Off",
                  1: "On", },
        entity_registry_enabled_default=False,
        allowedtypes=GEN4,
    ),
    SolaXModbusSensorEntityDescription(
        name="Maximum Per Day On",
        key="maximum_per_day_on",
        register = 0x128,
        entity_registry_enabled_default=False,
        allowedtypes=GEN4,
    ),
    SolaXModbusSensorEntityDescription(
        name="Micro Grid",
        key="microgrid",
        register = 0x11D,
        scale = { 0: "Disabled",
                  1: "Enabled", },
        entity_registry_enabled_default=False,
        allowedtypes=GEN4,
    ),
    SolaXModbusSensorEntityDescription(
        name="Minimum Per On Signal",
        key="minimum_per_on_signal",
        native_unit_of_measurement = TIME_MINUTES,
        register = 0x127,
        entity_registry_enabled_default=False,
        allowedtypes=GEN4,
    ),
    SolaXModbusSensorEntityDescription(
        name="Normal Runtime",
        key="normal_runtime",
        native_unit_of_measurement=TIME_HOURS,
        entity_registry_enabled_default=False,
        register = 0x8C,
        register_type = REG_INPUT,
        unit = REGISTER_S32,
        scale = 0.1,
        rounding = 1,
        allowedtypes=GEN3,
        icon="mdi:timer",
    ),
    SolaXModbusSensorEntityDescription(
        name="Overload Fault Val",
        key="overload_fault_val",
        register = 0x68,
        register_type=REG_INPUT,
        entity_registry_enabled_default=False,
        allowedtypes= GEN2 | GEN3 | GEN4,
        icon="mdi:alert-circle",
    ),
    SolaXModbusSensorEntityDescription(
        name="Work Start Time 1",
        key="work_start_time_1",
        register = 0x12A,
        scale = value_function_gen4time,
        entity_registry_enabled_default=False,
        allowedtypes=GEN4 | DCB,
        icon="mdi:home-clock",
    ),
    SolaXModbusSensorEntityDescription(
        name="Work Stop Time 1",
        key="work_stop_time_1",
        register = 0x12B,
        scale = value_function_gen4time,
        entity_registry_enabled_default=False,
        allowedtypes=GEN4 | DCB,
        icon="mdi:home-clock",
    ),
    SolaXModbusSensorEntityDescription(
        name="Work Start Time 2",
        key="work_start_time_2",
        register = 0x12C,
        scale = value_function_gen4time,
        entity_registry_enabled_default=False,
        allowedtypes=GEN4 | DCB,
        icon="mdi:home-clock",
    ),
    SolaXModbusSensorEntityDescription(
        name="Work Stop Time 2",
        key="work_stop_time_2",
        register = 0x12D,
        scale = value_function_gen4time,
        entity_registry_enabled_default=False,
        allowedtypes=GEN4 | DCB,
        icon="mdi:home-clock",
    ),
    SolaXModbusSensorEntityDescription(
        name="Parallel Setting",
        key="parallel_setting",
        register = 0x130,
        scale = { 0: "Free",
                  1: "Master",
                  2: "Slave" },
        entity_registry_enabled_default=False,
        allowedtypes=GEN4,
    ),
    SolaXModbusSensorEntityDescription(
        name="PV Connection Mode",
        key="pv_connection_mode",
        register = 0x11B,
        entity_registry_enabled_default=False,
        allowedtypes=GEN4,
    ),
    SolaXModbusSensorEntityDescription(
        name="PV Current 1",
        key="pv_current_1",
        native_unit_of_measurement=ELECTRIC_CURRENT_AMPERE,
        device_class=DEVICE_CLASS_CURRENT,
        register = 0x5,
        scale = 0.1,
        #register = 0x402 #MIC
        register_type = REG_INPUT,
        allowedtypes=HYBRID | PV,
        icon="mdi:current-dc",
    ),
    SolaXModbusSensorEntityDescription(
        name="PV Current 2",
        key="pv_current_2",
        native_unit_of_measurement=ELECTRIC_CURRENT_AMPERE,
        device_class=DEVICE_CLASS_CURRENT,
        register = 0x6,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes=HYBRID | PV,
        icon="mdi:current-dc",
    ),
    SolaXModbusSensorEntityDescription(
        name="PV Power 1",
        key="pv_power_1",
        native_unit_of_measurement=POWER_WATT,
        device_class=DEVICE_CLASS_POWER,
        state_class=STATE_CLASS_MEASUREMENT,
        register = 0xA,
        register_type = REG_INPUT,
        allowedtypes= HYBRID | PV,
        icon="mdi:solar-power-variant",
    ),
    SolaXModbusSensorEntityDescription(
        name="PV Power 2",
        key="pv_power_2",
        native_unit_of_measurement=POWER_WATT,
        device_class=DEVICE_CLASS_POWER,
        state_class=STATE_CLASS_MEASUREMENT,
        register = 0xB,
        register_type = REG_INPUT,
        allowedtypes=HYBRID | PV,
        icon="mdi:solar-power-variant",
    ),
    SolaXModbusSensorEntityDescription(
        name="PV Voltage 1",
        key="pv_voltage_1",
        native_unit_of_measurement=ELECTRIC_POTENTIAL_VOLT,
        device_class=DEVICE_CLASS_VOLTAGE,
        register = 0x3,
        scale = 0.1,
        #register = 0x400 #MIC
        register_type = REG_INPUT,
        rounding = 1,
        allowedtypes=HYBRID | PV,
    ),
    SolaXModbusSensorEntityDescription(
        name="PV Voltage 2",
        key="pv_voltage_2",
        native_unit_of_measurement=ELECTRIC_POTENTIAL_VOLT,
        device_class=DEVICE_CLASS_VOLTAGE,
        register = 0x4,
        scale = 0.1,
        #register = 0x401 #MIC
        register_type = REG_INPUT,
        rounding = 1,
        allowedtypes=HYBRID | PV,
    ),
    SolaXModbusSensorEntityDescription(
        name="PV Total Power",
        key="pv_total_power",
        value_function= value_function_pv_total_power,
        native_unit_of_measurement=POWER_WATT,
        device_class=DEVICE_CLASS_POWER,
        state_class=STATE_CLASS_MEASUREMENT,
        allowedtypes=HYBRID | PV,
        icon="mdi:solar-power-variant",
    ),
    SolaXModbusSensorEntityDescription(
        name="Registration Code Lan",
        key="registration_code_lan",
        register=0xAF,
        unit=REGISTER_STR,
        wordcount=5,
        entity_registry_enabled_default=False,
        allowedtypes= GEN3,
        entity_category = EntityCategory.DIAGNOSTIC,
        icon="mdi:information",
    ),
    SolaXModbusSensorEntityDescription(
        name="Registration Code Pocket",
        key="registration_code_pocket",
        register=0xAA,
        unit=REGISTER_STR,
        wordcount=5,
        entity_registry_enabled_default=False,
        allowedtypes= GEN3 | GEN4,
        entity_category = EntityCategory.DIAGNOSTIC,
        icon="mdi:information",
    ),
    SolaXModbusSensorEntityDescription(
        name="RTC",
        key="rtc",
        register = 0x85,
        unit = REGISTER_WORDS,
        wordcount = 6,
        scale = value_function_rtc,
        entity_registry_enabled_default=False,
        allowedtypes= GEN2 | GEN3 | GEN4,
        entity_category = EntityCategory.DIAGNOSTIC,
        icon="mdi:clock",
    ),
    SolaXModbusSensorEntityDescription(
        name="Run Mode",
        key="run_mode",
        register = 0x9,
        scale = { 0: "Waiting",
                  1: "Checking",
                  2: "Normal Mode",
                  3: "Fault",
                  4: "Permanent Fault Mode",
                  5: "Update Mode",
                  6: "Off-Grid Waiting",
                  7: "Off-Grid",
                  8: "Self Test",
                  9: "Idle Mode",
                 10: "Standby", },
        #register = 0x40F #MIC
        register_type = REG_INPUT,
        allowedtypes=GEN4,
        icon="mdi:run",
    ),
    SolaXModbusSensorEntityDescription(
        name="Run Mode",
        key="run_mode",
        register = 0x9,
        scale = { 0: "Waiting",
                  1: "Checking",
                  2: "Normal Mode",
                  3: "Off Mode",
                  4: "Permanent Fault Mode",
                  5: "Update Mode",
                  6: "EPS Check Mode",
                  7: "EPS Mode",
                  8: "Self Test",
                  9: "Idle Mode",
                 10: "Standby", },
        #register = 0x40F #MIC
        register_type = REG_INPUT,
        allowedtypes=GEN2 | GEN3,
        icon="mdi:run",
    ),
    SolaXModbusSensorEntityDescription(
        name="Schedule",
        key="schedule",
        register = 0x129,
        scale = { 0: "Disabled",
                  1: "Enabled", },
        entity_registry_enabled_default=False,
        allowedtypes=GEN4,
    ),
    SolaXModbusSensorEntityDescription(
        name="Selfuse Backup SOC",
        key="selfuse_backup_soc",
        native_unit_of_measurement=PERCENTAGE,
        device_class=DEVICE_CLASS_BATTERY,
        register = 0x11F,
        entity_registry_enabled_default=False,
        allowedtypes= GEN4,
        icon="mdi:battery-sync",
    ),
    SolaXModbusSensorEntityDescription(
        name="Selfuse Mode Backup",
        key="selfuse_mode_backup",
        register = 0x11E,
        scale = { 0: "Disabled",
                  1: "Enabled", },
        entity_registry_enabled_default=False,
        allowedtypes=GEN4,
        icon="mdi:dip-switch",
    ),
    SolaXModbusSensorEntityDescription(
        name="Series Number",
        key="seriesnumber",
        register=0x00,
        unit=REGISTER_STR,
        wordcount=7,
        entity_registry_enabled_default=False,
        allowedtypes= GEN2 | GEN3 | GEN4,
        entity_category = EntityCategory.DIAGNOSTIC,
        icon="mdi:information",
    ),
    SolaXModbusSensorEntityDescription(
        name="Shut Down",
        key="shutdown",
        register = 0x11C,
        scale = { 0: "Disabled",
                  1: "Enabled", },
        entity_registry_enabled_default=False,
        allowedtypes=GEN4,
    ),
    SolaXModbusSensorEntityDescription(
        name="Switch Off SOC",
        key="switch_off_soc",
        native_unit_of_measurement=PERCENTAGE,
        device_class=DEVICE_CLASS_BATTERY,
        register = 0x126,
        entity_registry_enabled_default=False,
        allowedtypes= GEN4,
    ),
    SolaXModbusSensorEntityDescription(
        name="Switch On SOC",
        key="switch_on_soc",
        native_unit_of_measurement=PERCENTAGE,
        device_class=DEVICE_CLASS_BATTERY,
        register = 0x124,
        entity_registry_enabled_default=False,
        allowedtypes= GEN4,
    ),
    SolaXModbusSensorEntityDescription(
        name="Temperature Board Charge",
        key="temperature_board_charge",
        native_unit_of_measurement=TEMP_CELSIUS,
        device_class=DEVICE_CLASS_TEMPERATURE,
        state_class=STATE_CLASS_MEASUREMENT,
        register = 0x17,
        register_type = REG_INPUT,
        unit = REGISTER_S16,
        allowedtypes= GEN2,
        entity_category = EntityCategory.DIAGNOSTIC,
    ),
    SolaXModbusSensorEntityDescription(
        name="Temperature Boost Charge",
        key="temperature_boost_charge",
        native_unit_of_measurement=TEMP_CELSIUS,
        device_class=DEVICE_CLASS_TEMPERATURE,
        state_class=STATE_CLASS_MEASUREMENT,
        register = 0x19,
        register_type = REG_INPUT,
        unit = REGISTER_S16,
        allowedtypes= GEN2,
        entity_category = EntityCategory.DIAGNOSTIC,
    ),
    SolaXModbusSensorEntityDescription(
        name="Today's Solar Energy",
        key="solar_energy_today",
        native_unit_of_measurement=ENERGY_KILO_WATT_HOUR,
        icon="mdi:solar-power",
        device_class=DEVICE_CLASS_ENERGY,
        state_class=STATE_CLASS_TOTAL_INCREASING,
        register = 0x96,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes= GEN3 | GEN4,
    ),
    SolaXModbusSensorEntityDescription(
        name="Today's Solar Energy",
        key="today_yield",
        native_unit_of_measurement=ENERGY_KILO_WATT_HOUR,
        icon="mdi:solar-power",
        device_class=DEVICE_CLASS_ENERGY,
        state_class=STATE_CLASS_TOTAL_INCREASING,
        register = 0x50,
        register_type = REG_INPUT,
        unit = REGISTER_S32,
        scale = 0.001,
        rounding = 2,
        allowedtypes= GEN2,
    ),
    SolaXModbusSensorEntityDescription(
        name="Total Solar Energy",
        key="solar_energy_total",
        native_unit_of_measurement=ENERGY_KILO_WATT_HOUR,
        icon="mdi:solar-power",
        device_class=DEVICE_CLASS_ENERGY,
        state_class=STATE_CLASS_TOTAL_INCREASING,
        register = 0x94,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes= GEN3 | GEN4,
    ),
    SolaXModbusSensorEntityDescription(
        name="Today's Yield",
        key="today_s_yield_gen2",
        native_unit_of_measurement=ENERGY_KILO_WATT_HOUR,
        icon="mdi:solar-power",
        device_class=DEVICE_CLASS_ENERGY,
        state_class=STATE_CLASS_TOTAL_INCREASING,
        register = 0x70,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 2,
        allowedtypes= GEN2,
        blacklist=('U50EC',)
    ),
    SolaXModbusSensorEntityDescription(
        name="E Charge Today",
        key="e_charge_today",
        native_unit_of_measurement=ENERGY_KILO_WATT_HOUR,
        icon="mdi:solar-power",
        device_class=DEVICE_CLASS_ENERGY,
        state_class=STATE_CLASS_TOTAL_INCREASING,
        entity_registry_enabled_default=False,
        register = 0x91,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 2,
        allowedtypes= GEN3 | GEN4,
    ),
    SolaXModbusSensorEntityDescription(
        name="E Charge Total",
        key="e_charge_total",
        native_unit_of_measurement=ENERGY_KILO_WATT_HOUR,
        icon="mdi:solar-power",
        device_class=DEVICE_CLASS_ENERGY,
        state_class=STATE_CLASS_TOTAL_INCREASING,
        entity_registry_enabled_default=False,
        register = 0x92,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 2,
        allowedtypes= GEN3 | GEN4,
    ),
    SolaXModbusSensorEntityDescription(
        name="Time Count Down",
        key="time_count_down",
        entity_registry_enabled_default=False,
        register = 0x13,
        scale = 0.001,
        rounding = 0,
        register_type = REG_INPUT,
        allowedtypes= GEN2 | GEN3 | GEN4,
        icon="mdi:timer",
    ),
    SolaXModbusSensorEntityDescription(
        name="Inverter Rated Power",
        key="inverter_rate_power",
        native_unit_of_measurement=POWER_WATT,
        device_class=DEVICE_CLASS_POWER,
        register = 0xBA,
        entity_registry_enabled_default=False,
        allowedtypes= GEN2 | GEN3 | GEN4,
    ),
    SolaXModbusSensorEntityDescription(
        name="Total Yield",
        key="total_yield",
        native_unit_of_measurement=ENERGY_KILO_WATT_HOUR,
        icon="mdi:solar-power",
        device_class=DEVICE_CLASS_ENERGY,
        state_class=STATE_CLASS_TOTAL_INCREASING,
        register = 0x52,
        scale = 0.1,
        rounding = 2, # was 1 for gen4
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        allowedtypes=GEN3 | GEN4 | GEN | HYBRID,
    ),
    SolaXModbusSensorEntityDescription(
        name="Total Solar Energy",
        key="total_yield",
        native_unit_of_measurement=ENERGY_KILO_WATT_HOUR,
        icon="mdi:solar-power",
        device_class=DEVICE_CLASS_ENERGY,
        state_class=STATE_CLASS_TOTAL_INCREASING,
        entity_registry_enabled_default=False,
        register = 0x52,
        scale = 0.001,
        rounding = 2,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        allowedtypes= GEN2,
    ),
    SolaXModbusSensorEntityDescription(
        name="Work Mode",
        key="work_mode",
        register = 0x12E,
        scale = { 0: "Disabled",
                  1: "Manua;",
                  2: "Smart Save" },
        entity_registry_enabled_default=False,
        allowedtypes=GEN4 | DCB,
    ),


    # tranferred from GEN4_SENSOR_TYPES
    SolaXModbusSensorEntityDescription(
        name="CT Type",
        key="ct_type",
        register = 0x103,
        scale = { 0: "100A",
                  1: "200A", },
        entity_registry_enabled_default=False,
        allowedtypes = GEN4,
     ),
    SolaXModbusSensorEntityDescription(
        name="DRM Function Enable",
        key="drm_function_enable",
        register = 0x102,
        scale = { 0: "Disabled",
                  1: "Enabled", },
        entity_registry_enabled_default=False,
        allowedtypes = GEN4,
     ),
    SolaXModbusSensorEntityDescription(
        name="Selfuse Night Charge Upper SOC",
        key="selfuse_nightcharge_upper_soc",
        register = 0x94,
        native_unit_of_measurement=PERCENTAGE,
        device_class=DEVICE_CLASS_BATTERY,
        allowedtypes= GEN4,
    ),
    SolaXModbusSensorEntityDescription(
        name="Selfuse Night Charge Enable",
        key="selfuse_nightcharge_enable",
        register = 0x93,
        unit = REGISTER_U8L,
        scale = { 0: "Disabled", 1: "Enabled", },
        allowedtypes = GEN4,
    ),
    SolaXModbusSensorEntityDescription(
        name="Charge Period2 Enable",
        key="charge_period2_enable",
        register = 0x9B,
        scale = { 0: "Disabled", 1: "Enabled", },
        entity_registry_enabled_default=False,
        allowedtypes = GEN4,
    ),
    SolaXModbusSensorEntityDescription(
        name="Selfuse Discharge Min SOC",
        key="selfuse_discharge_min_soc",
        register = 0x93,
        unit = REGISTER_U8H,
        allowedtypes = GEN4,
    ),
    SolaXModbusSensorEntityDescription(
        name="Shadow Fix Function Level",
        key="shadow_fix_enable",
        register = 0x104,
        scale = { 0: "Off",
                  1: "Low",
                  2: "Middle",
                  2: "High", },
        entity_registry_enabled_default=False,
        allowedtypes = GEN4,
     ),
    SolaXModbusSensorEntityDescription(
        name="Machine Type X1/X3",
        key="machine_type",
        register = 0x105,
        scale = { 0: "X1",
                  3: "X3", },
        entity_registry_enabled_default=False,
        allowedtypes = GEN4,
        icon="mdi:information",
     ),
    SolaXModbusSensorEntityDescription(
        name="Manual Mode",
        key="manual_mode",
        register = 0x8C,
        scale = { 0: "Stop Charge and Discharge",
                1: "Force Charge",
                2: "Force Discharge", },
        allowedtypes = GEN4,
     ),
    SolaXModbusSensorEntityDescription(
        name="Feedin Discharge Min SOC",
        key="feedin_discharge_min_soc",
        register=0x95,
        unit=REGISTER_U8L,
        native_unit_of_measurement=PERCENTAGE,
        device_class=DEVICE_CLASS_BATTERY,
        allowedtypes = GEN4,
     ),
    SolaXModbusSensorEntityDescription(
        name="Feedin Night Charge Upper SOC",
        key="feedin_nightcharge_upper_soc",
        register = 0x95,
        unit = REGISTER_U8H,
        native_unit_of_measurement=PERCENTAGE,
        device_class=DEVICE_CLASS_BATTERY,
        allowedtypes = GEN4,
     ),
    SolaXModbusSensorEntityDescription(
        name="Backup Discharge Min SOC",
        key="backup_discharge_min_soc",
        register = 0x96,
        unit = REGISTER_U8L,
        native_unit_of_measurement=PERCENTAGE,
        device_class=DEVICE_CLASS_BATTERY,
        allowedtypes = GEN4,
        icon="mdi:battery-sync",
     ),
    SolaXModbusSensorEntityDescription(
        name="Backup Night Charge Upper SOC",
        key="backup_nightcharge_upper_soc",
        register = 0x96,
        unit = REGISTER_U8H,
        native_unit_of_measurement=PERCENTAGE,
        device_class=DEVICE_CLASS_BATTERY,
        allowedtypes = GEN4,
        icon="mdi:battery-sync",
     ),


     # transferred fromm GEN3_X1_SENSOR_TYPES, some also from GEN3_X3_SENSOR_TYPES

    SolaXModbusSensorEntityDescription(
        name="Backup Charge End",
        key="backup_charge_end",
        register = 0x100,
        unit = REGISTER_WORDS,
        wordcount = 2,
        scale = value_function_gen23time,
        entity_registry_enabled_default=False,
        allowedtypes= GEN3, # Was this really GEN4?
        icon="mdi:battery-clock",
    ),
    SolaXModbusSensorEntityDescription(
        name="Backup Charge Start",
        key="backup_charge_start",
        register = 0xFE,
        unit = REGISTER_WORDS,
        wordcount = 2,
        scale = value_function_gen23time,
        entity_registry_enabled_default=False,
        allowedtypes= GEN3, # Was this really GEN4?
        icon="mdi:battery-clock",
    ),
    SolaXModbusSensorEntityDescription(
        name="Backup Gridcharge",
        key="backup_gridcharge",
        register = 0xFD,
        scale = { 0: "Disabled",
                  1: "Enabled", },
        entity_registry_enabled_default=False,
        allowedtypes= GEN3,
        icon="mdi:transmission-tower",
    ),
    SolaXModbusSensorEntityDescription(
        name="Backup Gridcharge",
        key="backup_gridcharge",
        entity_registry_enabled_default=False,
        allowedtypes= X1 | GEN4, # Was this really GEN4?
        icon="mdi:transmission-tower",
    ),
    SolaXModbusSensorEntityDescription(
        name="Battery Input Energy Today", # Need revisit this
        key="input_energy_charge_today",
        native_unit_of_measurement=ENERGY_KILO_WATT_HOUR,
        icon="mdi:battery-arrow-up",
        register = 0x23,
        register_type=REG_INPUT,
        scale = 0.1,
        unit= REGISTER_U16,
        device_class=DEVICE_CLASS_ENERGY,
        state_class=STATE_CLASS_TOTAL_INCREASING,
        allowedtypes= X1 | X3 | GEN3 | GEN4,
    ),
    SolaXModbusSensorEntityDescription(
        name="Battery Output Energy Today", # Need revisit this
        key="output_energy_charge_today",
        native_unit_of_measurement=ENERGY_KILO_WATT_HOUR,
        icon="mdi:battery-arrow-down",
        register = 0x20,
        register_type=REG_INPUT,
        unit = REGISTER_U16,
        scale = 0.1,
        device_class=DEVICE_CLASS_ENERGY,
        state_class=STATE_CLASS_TOTAL_INCREASING,
        allowedtypes= X1 | X3 | GEN3 | GEN4,
    ),
    SolaXModbusSensorEntityDescription(
        name="Cloud Control",
        key="cloud_control",
        register = 0x103,
        scale = { 0: "Disabled",
                  1: "Enabled", },
        entity_registry_enabled_default=False,
        allowedtypes= GEN3,
        icon="mdi:cloud",
    ),
    SolaXModbusSensorEntityDescription(
        name="CT Meter Setting",
        key="ct_meter_setting",
        register = 0x10E,
        scale = { 0: "Meter",
                  1: "CT", },
        entity_registry_enabled_default=False,
        allowedtypes= GEN3 | AC,
        entity_category = EntityCategory.DIAGNOSTIC,
        icon="mdi:meter-electric",
    ),
    SolaXModbusSensorEntityDescription(
        name="CT Meter Setting",
        key="ct_meter_setting",
        register = 0x115,
        scale = { 0: "Meter",
                  1: "CT", },
        entity_registry_enabled_default=False,
        allowedtypes= GEN3 | GEN4 | HYBRID,
        entity_category = EntityCategory.DIAGNOSTIC,
        icon="mdi:meter-electric",
    ),
    SolaXModbusSensorEntityDescription(
        name="Discharge Cut Off Point Different",
        key="disch_cut_off_point_different",
        register = 0x111,
        scale = { 0: "Disabled",
                  1: "Enabled", },
        entity_registry_enabled_default=False,
        allowedtypes= GEN3 | GEN4,
        icon="mdi:dip-switch",
    ),
    SolaXModbusSensorEntityDescription(
        name="Discharge Cut Off Voltage Grid Mode",
        key="disch_cut_off_voltage_grid_mode",
        native_unit_of_measurement=ELECTRIC_POTENTIAL_VOLT,
        device_class=DEVICE_CLASS_VOLTAGE,
        register = 0x113,
        scale = 0.1,
        rounding = 1,
        entity_registry_enabled_default=False,
        allowedtypes= GEN3 | GEN4,
    ),
    SolaXModbusSensorEntityDescription(
        name="Today's Export Energy",
        key="export_energy_today",
        native_unit_of_measurement=ENERGY_KILO_WATT_HOUR,
        device_class=DEVICE_CLASS_ENERGY,
        state_class=STATE_CLASS_TOTAL_INCREASING,
        allowedtypes= GEN3 | GEN4,
        register = 0x98,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.01,
        rounding = 2,
        icon="mdi:home-export-outline",
    ),
    SolaXModbusSensorEntityDescription(
        name="Forcetime Period 1 Maximum Capacity",
        key="forcetime_period_1_max_capacity",
        register = 0x10C,
        native_unit_of_measurement=PERCENTAGE,
        entity_registry_enabled_default=False,
        allowedtypes= GEN3 | AC,
        icon="mdi:battery-sync",
    ),
    SolaXModbusSensorEntityDescription(
        name="Forcetime Period 2 Maximum Capacity",
        key="forcetime_period_2_max_capacity",
        register = 0x10D,
        native_unit_of_measurement=PERCENTAGE,
        entity_registry_enabled_default=False,
        allowedtypes= GEN3 | AC,
        icon="mdi:battery-sync",
    ),
    SolaXModbusSensorEntityDescription(
        name="Forcetime Period 1 Maximum Capacity",
        key="forcetime_period_1_max_capacity",
        register = 0x10F,
        native_unit_of_measurement=PERCENTAGE,
        entity_registry_enabled_default=False,
        allowedtypes= GEN3 | HYBRID,
        icon="mdi:battery-sync",
    ),
    SolaXModbusSensorEntityDescription(
        name="Forcetime Period 2 Maximum Capacity",
        key="forcetime_period_2_max_capacity",
        register = 0x110,
        native_unit_of_measurement=PERCENTAGE,
        entity_registry_enabled_default=False,
        allowedtypes= GEN3 | HYBRID,
        icon="mdi:battery-sync",
    ),
    SolaXModbusSensorEntityDescription(
        name="Global MPPT Function",
        key="global_mppt_function",
        register = 0x104,
        scale = { 0: "Disabled",
                  1: "Enabled", },
        entity_registry_enabled_default=False,
        allowedtypes= X1 | X3 | GEN3,
        icon="mdi:sun-compass",
    ),
    SolaXModbusSensorEntityDescription(
        name="Today's Import Energy",
        key="import_energy_today",
        native_unit_of_measurement=ENERGY_KILO_WATT_HOUR,
        device_class=DEVICE_CLASS_ENERGY,
        state_class=STATE_CLASS_TOTAL_INCREASING,
        register = 0x9A,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.01,
        rounding = 2,
        allowedtypes= GEN3 | GEN4,
        icon="mdi:home-import-outline",
    ),
    # Should be X3 as well?
    SolaXModbusSensorEntityDescription(
        name="Machine Style",
        key="machine_style",
        register = 0x107,
        scale = { 0: "X-Hybrid",
                  1: "X-RetroFit", },
        entity_registry_enabled_default=False,
        allowedtypes= X1 | X3 | GEN3 | GEN4,
        entity_category = EntityCategory.DIAGNOSTIC,
        icon="mdi:information",
    ),
    # Should be X3 as well?
    SolaXModbusSensorEntityDescription(
        name="Meter 1 id",
        key="meter_1_id",
        register = 0x109,
        entity_registry_enabled_default=False,
        allowedtypes= X1 | X3 | GEN3 | GEN4,
        entity_category = EntityCategory.DIAGNOSTIC,
        icon="mdi:meter-electric",
    ),
    # Should be X3 as well?
    SolaXModbusSensorEntityDescription(
        name="Meter 2 id",
        key="meter_2_id",
        register = 0x10A,
        entity_registry_enabled_default=False,
        allowedtypes= X1 | X3 | GEN3 | GEN4,
        entity_category = EntityCategory.DIAGNOSTIC,
        icon="mdi:meter-electric",
    ),
    # Should be X3 as well?
    SolaXModbusSensorEntityDescription(
        name="Meter Function",
        key="meter_function",
        register = 0x108,
        scale = { 0: "Disabled",
                  1: "Enabled", },
        entity_registry_enabled_default=False,
        allowedtypes= GEN3 | GEN4,
        entity_category = EntityCategory.DIAGNOSTIC,
        icon="mdi:meter-electric",
    ),
    SolaXModbusSensorEntityDescription(
        name="Export Duration",
        key="export_duration",
        register = 0x10B,
        scale = { 4: "Default",
                  900: "15 Minutes",
                  1800: "30 Minutes",
                  3600: "60 Minutes", },
        entity_registry_enabled_default=False,
        allowedtypes= GEN3,
        icon="mdi:home-export-outline",
    ),
    SolaXModbusSensorEntityDescription(
        name="wAS4777 Power Manager",
        key="was4777_power_manager",
        register = 0x102,
        scale = { 0: "Disabled",
                  1: "Enabled", },
        entity_registry_enabled_default=False,
        allowedtypes= GEN3,
        icon="mdi:information",
    ),


    # transferred fromm GEN3_X3_SENSOR_TYPES
    SolaXModbusSensorEntityDescription(
        name="Earth Detect X3",
        key="earth_detect_x3",
        register = 0x114,
        scale = { 0: "Disabled",
                  1: "Enabled", },
        allowedtypes = X3 | GEN3,
    ),
    SolaXModbusSensorEntityDescription(
        name="Measured Power R",
        key="feedin_power_r",
        native_unit_of_measurement=POWER_WATT,
        device_class=DEVICE_CLASS_POWER,
        state_class=STATE_CLASS_MEASUREMENT,
        register = 0x82,
        register_type = REG_INPUT,
        unit = REGISTER_S32,
        allowedtypes = X3 | GEN3 | GEN4 | GEN | HYBRID,
    ),
    SolaXModbusSensorEntityDescription(
        name="Measured Power S",
        key="feedin_power_s",
        native_unit_of_measurement=POWER_WATT,
        device_class=DEVICE_CLASS_POWER,
        state_class=STATE_CLASS_MEASUREMENT,
        register = 0x84,
        register_type = REG_INPUT,
        unit = REGISTER_S32,
        allowedtypes = X3 | GEN3 | GEN4 | GEN | HYBRID,
    ),
    SolaXModbusSensorEntityDescription(
        name="Measured Power T",
        key="feedin_power_t",
        native_unit_of_measurement=POWER_WATT,
        device_class=DEVICE_CLASS_POWER,
        state_class=STATE_CLASS_MEASUREMENT,
        register = 0x86,
        register_type = REG_INPUT,
        unit = REGISTER_S32,
        allowedtypes = X3 | GEN3 | GEN4 | GEN | HYBRID,
    ),
    SolaXModbusSensorEntityDescription(
        name="Inverter Current R",
        key="grid_current_r",
        native_unit_of_measurement=ELECTRIC_CURRENT_AMPERE,
        device_class=DEVICE_CLASS_CURRENT,
        register = 0x6B,
        register_type = REG_INPUT,
        unit = REGISTER_S16,
        scale = 0.1,
        rounding = 1,
        allowedtypes = X3 | GEN3 | GEN4 | GEN | HYBRID,
    ),
    SolaXModbusSensorEntityDescription(
        name="Inverter Current S",
        key="grid_current_s",
        native_unit_of_measurement=ELECTRIC_CURRENT_AMPERE,
        device_class=DEVICE_CLASS_CURRENT,
        register = 0x6F,
        register_type = REG_INPUT,
        unit = REGISTER_S16,
        scale = 0.1,
        rounding = 1,
        allowedtypes = X3 | GEN3 | GEN4 | GEN | HYBRID,
    ),
    SolaXModbusSensorEntityDescription(
        name="Inverter Current T",
        key="grid_current_t",
        native_unit_of_measurement=ELECTRIC_CURRENT_AMPERE,
        device_class=DEVICE_CLASS_CURRENT,
        register = 0x73,
        register_type = REG_INPUT,
        unit = REGISTER_S16,
        scale = 0.1,
        rounding = 1,
        allowedtypes = X3 | GEN3 | GEN4 | GEN | HYBRID,
    ),
    SolaXModbusSensorEntityDescription(
        name="Grid Mode Runtime",
        key="grid_mode_runtime",
        native_unit_of_measurement=TIME_HOURS,
        register = 0x88,
        register_type = REG_INPUT,
        unit = REGISTER_S32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = X3 | GEN3 | GEN4,
        icon="mdi:timer",
    ),
    SolaXModbusSensorEntityDescription(
        name="Inverter Power R",
        key="grid_power_r",
        native_unit_of_measurement=POWER_WATT,
        device_class=DEVICE_CLASS_POWER,
        state_class=STATE_CLASS_MEASUREMENT,
        register = 0x6C,
        # register = 0x410, #MIC might be mixed with feedin_power_r
        register_type = REG_INPUT,
        unit = REGISTER_S16, # MIC uses uint
        allowedtypes = X3 | GEN3 | GEN4,
    ),
    SolaXModbusSensorEntityDescription(
        name="Inverter Power S",
        key="grid_power_s",
        native_unit_of_measurement=POWER_WATT,
        device_class=DEVICE_CLASS_POWER,
        state_class=STATE_CLASS_MEASUREMENT,
        register = 0x70,
        # register = 0x411, #MIC might be mixed with feedin_power_s
        register_type = REG_INPUT,
        unit = REGISTER_S16, # MIC uses uint
        allowedtypes = X3 | GEN3 | GEN4,
    ),
    SolaXModbusSensorEntityDescription(
        name="Inverter Power T",
        key="grid_power_t",
        native_unit_of_measurement=POWER_WATT,
        device_class=DEVICE_CLASS_POWER,
        state_class=STATE_CLASS_MEASUREMENT,
        register = 0x74,
        # register = 0x412, #MIC might be mixed with feedin_power_t
        register_type = REG_INPUT,
        unit = REGISTER_S16, # MIC uses uint
        allowedtypes = X3 | GEN3 | GEN4,
    ),
    SolaXModbusSensorEntityDescription(
        name="Grid Service",
        key="grid_service",
        register = 0xFC,
        scale = { 0: "Disabled",
                  1: "Enabled", },
        allowedtypes = GEN2,
    ),
    SolaXModbusSensorEntityDescription(
        name="Grid Service X3",
        key="grid_service_x3",
        register = 0x105,
        scale = { 0: "Disabled",
                  1: "Enabled", },
        allowedtypes = X3 | GEN3,
    ),
    SolaXModbusSensorEntityDescription(
        name="Inverter Voltage R",
        key="grid_voltage_r",
        native_unit_of_measurement=ELECTRIC_POTENTIAL_VOLT,
        device_class=DEVICE_CLASS_VOLTAGE,
        register = 0x6A,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = X3 | GEN3 | GEN4 | GEN | HYBRID,
    ),
    SolaXModbusSensorEntityDescription(
        name="Inverter Voltage S",
        key="grid_voltage_s",
        native_unit_of_measurement=ELECTRIC_POTENTIAL_VOLT,
        device_class=DEVICE_CLASS_VOLTAGE,
        register = 0x6E,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = X3 | GEN3 | GEN4 | GEN | HYBRID,
    ),
    SolaXModbusSensorEntityDescription(
        name="Inverter Voltage T",
        key="grid_voltage_t",
        native_unit_of_measurement=ELECTRIC_POTENTIAL_VOLT,
        device_class=DEVICE_CLASS_VOLTAGE,
        register = 0x72,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = X3 | GEN3 | GEN4 | GEN | HYBRID,
    ),
    SolaXModbusSensorEntityDescription(
        name="Phase Power Balance X3",
        key="phase_power_balance_x3",
        register = 0x106,
        scale = { 0: "Disabled", 1: "Enabled"},
        allowedtypes = X3 | GEN3 | GEN4,
    ),

    # transferred from X1_EPS_SENSOR_TYPES

    SolaXModbusSensorEntityDescription(
        name="EPS Auto Restart",
        key="eps_auto_restart",
        register = 0x10C,
        scale = { 0: "Disabled",
                  1: "Enabled", },
        allowedtypes = GEN3 | HYBRID | EPS,
    ),
    SolaXModbusSensorEntityDescription(
        name="EPS Current",
        key="eps_current",
        native_unit_of_measurement=ELECTRIC_CURRENT_AMPERE,
        device_class=DEVICE_CLASS_CURRENT,
        register = 0x4D,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = X1 | GEN2 | GEN3 | GEN4 | EPS,
    ),
    SolaXModbusSensorEntityDescription(
        name="EPS Frequency",
        key="eps_frequency",
        native_unit_of_measurement=FREQUENCY_HERTZ,
        device_class=DEVICE_CLASS_FREQUENCY,
        register = 0x4F,
        register_type = REG_INPUT,
        scale = 0.01,
        rounding = 2,
        allowedtypes = X1 | X3  | GEN2 | GEN3 | GEN4 | EPS,
    ),
    SolaXModbusSensorEntityDescription(
        name="EPS Min Esc SOC",
        key="eps_min_esc_soc",
        register = 0x10E,
        native_unit_of_measurement=PERCENTAGE,
        allowedtypes = GEN3 | HYBRID | EPS,
    ),
    SolaXModbusSensorEntityDescription(
        name="EPS Min Esc Voltage",
        key="eps_min_esc_voltage",
        register = 0x10D,
        native_unit_of_measurement=ELECTRIC_POTENTIAL_VOLT,
        allowedtypes = GEN3 | HYBRID | EPS,
    ),
    SolaXModbusSensorEntityDescription(
        name="EPS Mute",
        key="eps_mute",
        register = 0xB7,
        scale = { 0: "Off",
                  1: "On", },
        allowedtypes = GEN2 | GEN3 | GEN4 | EPS,
    ),
    SolaXModbusSensorEntityDescription(
        name="EPS Power",
        key="eps_power",
        native_unit_of_measurement=POWER_VOLT_AMPERE,
        register = 0x4E,
        register_type = REG_INPUT,
        allowedtypes = X1 | GEN2 | GEN3 | GEN4 | EPS,
    ),
    SolaXModbusSensorEntityDescription(
        name="EPS Set Frequency",
        key="eps_set_frequency",
        native_unit_of_measurement=FREQUENCY_HERTZ,
        device_class=DEVICE_CLASS_FREQUENCY,
        register = 0xB8,                     # CORRECTED from 0xB7
        scale = { 0: "50Hz",
                  1: "60Hz", },
        allowedtypes = GEN2 | GEN3 | EPS,
    ),
    SolaXModbusSensorEntityDescription(
        name="EPS Voltage",
        key="eps_voltage",
        native_unit_of_measurement=ELECTRIC_POTENTIAL_VOLT,
        device_class=DEVICE_CLASS_VOLTAGE,
        register = 0x4C,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = X1 | GEN2 | GEN3 | GEN4 | EPS,
    ),
    SolaXModbusSensorEntityDescription(
        name="EPS Yield Today",
        key="eps_yield_today",
        native_unit_of_measurement=ENERGY_KILO_WATT_HOUR,
        device_class=DEVICE_CLASS_ENERGY,
        #state_class=STATE_CLASS_TOTAL_INCREASING,
        register = 0x90,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN3 | GEN4 | EPS,
    ),
    SolaXModbusSensorEntityDescription(
        name="EPS Yield Total",
        key="eps_yield_total",
        native_unit_of_measurement=ENERGY_KILO_WATT_HOUR,
        device_class=DEVICE_CLASS_ENERGY,
        #state_class=STATE_CLASS_TOTAL_INCREASING,
        register = 0x8E,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = GEN2 | EPS,
    ),
    SolaXModbusSensorEntityDescription(
        name="EPS Yield Total",
        key="eps_yield_total",
        native_unit_of_measurement=ENERGY_KILO_WATT_HOUR,
        device_class=DEVICE_CLASS_ENERGY,
        #state_class=STATE_CLASS_TOTAL_INCREASING,
        register = 0x8E,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        allowedtypes = GEN3 | GEN4 | EPS,
    ),

    # transferred from X3_EPS_SENSOR_TYPES

    SolaXModbusSensorEntityDescription(
        name="EPS Current R",
        key="eps_current_r",
        native_unit_of_measurement=ELECTRIC_CURRENT_AMPERE,
        device_class=DEVICE_CLASS_CURRENT,
        register = 0x77,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = X3 | GEN2 | GEN3 | GEN4 | EPS,
        ),
    SolaXModbusSensorEntityDescription(
        name="EPS Current S",
        key="eps_current_s",
        native_unit_of_measurement=ELECTRIC_CURRENT_AMPERE,
        device_class=DEVICE_CLASS_CURRENT,
        register = 0x7B,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = X3 | GEN2 | GEN3 | GEN4 | EPS,
    ),
    SolaXModbusSensorEntityDescription(
        name="EPS Current T",
        key="eps_current_t",
        native_unit_of_measurement=ELECTRIC_CURRENT_AMPERE,
        device_class=DEVICE_CLASS_CURRENT,
        register = 0x7F,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = X3 | GEN2 | GEN3 | GEN4 | EPS,
    ),
    SolaXModbusSensorEntityDescription(
        name="EPS Mode Runtime",
        key="eps_mode_runtime",
        register = 0x8A,
        register_type = REG_INPUT,
        unit = REGISTER_S32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = X3 | GEN3 | GEN4 | EPS,
        icon="mdi:timer",
    ),
    SolaXModbusSensorEntityDescription(
        name="EPS Power R",
        key="eps_power_r",
        native_unit_of_measurement=POWER_VOLT_AMPERE,
        register = 0x79,
        register_type = REG_INPUT,
        allowedtypes = X3 | GEN2 | GEN3 | GEN4 | EPS,
    ),
    SolaXModbusSensorEntityDescription(
        name="EPS Power S",
        key="eps_power_s",
        native_unit_of_measurement=POWER_VOLT_AMPERE,
        register = 0x7D,
        register_type = REG_INPUT,
        allowedtypes = X3 | GEN2 | GEN3 | GEN4 | EPS,
    ),
    SolaXModbusSensorEntityDescription(
        name="EPS Power T",
        key="eps_power_t",
        native_unit_of_measurement=POWER_VOLT_AMPERE,
        register = 0x81,
        register_type = REG_INPUT,
        allowedtypes = X3 | GEN2 | GEN3 | GEN4 | EPS,
    ),
    SolaXModbusSensorEntityDescription(
        name="EPS Power Active R",
        key="eps_power_active_r",
        native_unit_of_measurement=POWER_WATT,
        device_class=DEVICE_CLASS_POWER,
        state_class=STATE_CLASS_MEASUREMENT,
        register = 0x78,
        register_type = REG_INPUT,
        allowedtypes = X3 | GEN2 | GEN3 | GEN4 | EPS,
    ),
    SolaXModbusSensorEntityDescription(
        name="EPS Power Active S",
        key="eps_power_active_s",
        native_unit_of_measurement=POWER_WATT,
        device_class=DEVICE_CLASS_POWER,
        state_class=STATE_CLASS_MEASUREMENT,
        register = 0x7C,
        register_type = REG_INPUT,
        allowedtypes = X3 | GEN2 | GEN3 | GEN4 | EPS,
    ),
    SolaXModbusSensorEntityDescription(
        name="EPS Power Active T",
        key="eps_power_active_t",
        native_unit_of_measurement=POWER_WATT,
        device_class=DEVICE_CLASS_POWER,
        state_class=STATE_CLASS_MEASUREMENT,
        register = 0x80,
        register_type = REG_INPUT,
        allowedtypes = X3 | GEN2 | GEN3 | GEN4 | EPS,
    ),
    SolaXModbusSensorEntityDescription(
        name="EPS Voltage R",
        key="eps_voltage_r",
        native_unit_of_measurement=ELECTRIC_POTENTIAL_VOLT,
        device_class=DEVICE_CLASS_VOLTAGE,
        register = 0x76,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = X3 | GEN2 | GEN3 | GEN4 | EPS,
    ),
    SolaXModbusSensorEntityDescription(
        name="EPS Voltage S",
        key="eps_voltage_s",
        native_unit_of_measurement=ELECTRIC_POTENTIAL_VOLT,
        device_class=DEVICE_CLASS_VOLTAGE,
        register = 0x7A,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = X3 | GEN2 | GEN3 | GEN4 | EPS,
    ),
    SolaXModbusSensorEntityDescription(
        name="EPS Voltage T",
        key="eps_voltage_t",
        native_unit_of_measurement=ELECTRIC_POTENTIAL_VOLT,
        device_class=DEVICE_CLASS_VOLTAGE,
        register = 0x7E,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = X3 | GEN2 | GEN3 | GEN4 | EPS,
    ),
]

SENSOR_TYPES_MIC: list[SolaXMicModbusSensorEntityDescription] = [

    SolaXMicModbusSensorEntityDescription(
        name="PV Voltage 1",
        key="pv_voltage_1",
        native_unit_of_measurement=ELECTRIC_POTENTIAL_VOLT,
        device_class=DEVICE_CLASS_VOLTAGE,
        register = 0x400,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = MIC,
    ),
    SolaXMicModbusSensorEntityDescription(
        name="PV Voltage 2",
        key="pv_voltage_2",
        native_unit_of_measurement=ELECTRIC_POTENTIAL_VOLT,
        device_class=DEVICE_CLASS_VOLTAGE,
        register = 0x401,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = MIC,
    ),
    SolaXMicModbusSensorEntityDescription(
        name="PV Current 1",
        key="pv_current_1",
        native_unit_of_measurement=ELECTRIC_CURRENT_AMPERE,
        device_class=DEVICE_CLASS_CURRENT,
        register = 0x402,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = MIC,
        icon="mdi:current-dc",
    ),
    SolaXMicModbusSensorEntityDescription(
        name="PV Current 2",
        key="pv_current_2",
        native_unit_of_measurement=ELECTRIC_CURRENT_AMPERE,
        device_class=DEVICE_CLASS_CURRENT,
        register = 0x403,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = MIC,
        icon="mdi:current-dc",
    ),
    SolaXMicModbusSensorEntityDescription(
        name="Inverter Voltage R",
        key="grid_voltage_r",
        native_unit_of_measurement=ELECTRIC_POTENTIAL_VOLT,
        device_class=DEVICE_CLASS_VOLTAGE,
        register = 0x404,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = MIC,
    ),
    SolaXMicModbusSensorEntityDescription(
        name="Inverter Voltage S",
        key="grid_voltage_s",
        native_unit_of_measurement=ELECTRIC_POTENTIAL_VOLT,
        device_class=DEVICE_CLASS_VOLTAGE,
        register = 0x405,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = MIC,
    ),
    SolaXMicModbusSensorEntityDescription(
        name="Inverter Voltage T",
        key="grid_voltage_t",
        native_unit_of_measurement=ELECTRIC_POTENTIAL_VOLT,
        device_class=DEVICE_CLASS_VOLTAGE,
        register = 0x406,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = MIC,
    ),
    SolaXMicModbusSensorEntityDescription(
        name="Inverter Frequency R",
        key="grid_frequency_r",
        native_unit_of_measurement=FREQUENCY_HERTZ,
        device_class=DEVICE_CLASS_FREQUENCY,
        register = 0x407,
        newblock = True,
        register_type = REG_INPUT,
        scale = 0.01,
        rounding = 2,
        allowedtypes = MIC,
    ),
    SolaXMicModbusSensorEntityDescription(
        name="Inverter Frequency S",
        key="grid_frequency_s",
        native_unit_of_measurement=FREQUENCY_HERTZ,
        device_class=DEVICE_CLASS_FREQUENCY,
        register = 0x408,
        register_type = REG_INPUT,
        scale = 0.01,
        rounding = 2,
        allowedtypes = MIC,
    ),
    SolaXMicModbusSensorEntityDescription(
        name="Inverter Frequency T",
        key="grid_frequency_t",
        native_unit_of_measurement=FREQUENCY_HERTZ,
        device_class=DEVICE_CLASS_FREQUENCY,
        register = 0x409,
        register_type = REG_INPUT,
        scale = 0.01,
        rounding = 2,
        allowedtypes = MIC,
    ),
    SolaXMicModbusSensorEntityDescription(
        name="Inverter Current R",
        key="grid_current_r",
        native_unit_of_measurement=ELECTRIC_CURRENT_AMPERE,
        device_class=DEVICE_CLASS_CURRENT,
        register = 0x40A,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = MIC,
    ),
    SolaXMicModbusSensorEntityDescription(
        name="Inverter Current S",
        key="grid_current_s",
        native_unit_of_measurement=ELECTRIC_CURRENT_AMPERE,
        device_class=DEVICE_CLASS_CURRENT,
        register = 0x40B, #MIC
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = MIC,
    ),
    SolaXMicModbusSensorEntityDescription(
        name="Inverter Current T",
        key="grid_current_t",
        native_unit_of_measurement=ELECTRIC_CURRENT_AMPERE,
        device_class=DEVICE_CLASS_CURRENT,
        register = 0x40C,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = MIC,
    ),
    SolaXMicModbusSensorEntityDescription(
        name="Inverter Temperature",
        key="inverter_temperature",
        native_unit_of_measurement=TEMP_CELSIUS,
        device_class=DEVICE_CLASS_TEMPERATURE,
        state_class=STATE_CLASS_MEASUREMENT,
        register = 0x40D,
        register_type = REG_INPUT,
        allowedtypes = MIC,
        entity_category = EntityCategory.DIAGNOSTIC,
    ),
    SolaXMicModbusSensorEntityDescription(
        name="Measured Power",
        key="measured_power",
        native_unit_of_measurement=POWER_WATT,
        device_class=DEVICE_CLASS_POWER,
        state_class=STATE_CLASS_MEASUREMENT,
        register = 0x40E,
        newblock = True,
        register_type = REG_INPUT,
        allowedtypes = MIC,
    ),
    SolaXMicModbusSensorEntityDescription(
        name="Run Mode",
        key="run_mode",
        register = 0x40F,
        scale = { 0: "Waiting",
                  1: "Checking",
                  2: "Normal Mode",
                  3: "Fault",
                  4: "Permanent Fault Mode", },
        register_type = REG_INPUT,
        allowedtypes = MIC,
        icon="mdi:run",
    ),
    SolaXMicModbusSensorEntityDescription(
        name="Measured Power R",
        key="feedin_power_r",
        native_unit_of_measurement=POWER_WATT,
        device_class=DEVICE_CLASS_POWER,
        state_class=STATE_CLASS_MEASUREMENT,
        register = 0x410,
        register_type = REG_INPUT,
        allowedtypes = MIC,
    ),
    SolaXMicModbusSensorEntityDescription(
        name="Measured Power S",
        key="feedin_power_s",
        native_unit_of_measurement=POWER_WATT,
        device_class=DEVICE_CLASS_POWER,
        state_class=STATE_CLASS_MEASUREMENT,
        register = 0x411,
        register_type = REG_INPUT,
        allowedtypes = MIC,
    ),
    SolaXMicModbusSensorEntityDescription(
        name="Measured Power T",
        key="feedin_power_t",
        native_unit_of_measurement=POWER_WATT,
        device_class=DEVICE_CLASS_POWER,
        state_class=STATE_CLASS_MEASUREMENT,
        register = 0x412,
        register_type = REG_INPUT,
        allowedtypes = MIC,
    ),
    SolaXMicModbusSensorEntityDescription(
        name="PV Power 1",
        key="pv_power_1",
        native_unit_of_measurement=POWER_WATT,
        device_class=DEVICE_CLASS_POWER,
        state_class=STATE_CLASS_MEASUREMENT,
        register = 0x414,
        register_type = REG_INPUT,
        allowedtypes = MIC,
        icon="mdi:solar-power-variant",
    ),
    SolaXMicModbusSensorEntityDescription(
        name="PV Power 2",
        key="pv_power_2",
        native_unit_of_measurement=POWER_WATT,
        device_class=DEVICE_CLASS_POWER,
        state_class=STATE_CLASS_MEASUREMENT,
        register = 0x415,
        register_type = REG_INPUT,
        allowedtypes = MIC,
        icon="mdi:solar-power-variant",
    ),
    SolaXMicModbusSensorEntityDescription(
        name="PV Total Power",
        key="pv_total_power",
        value_function= value_function_pv_total_power,
        native_unit_of_measurement=POWER_WATT,
        device_class=DEVICE_CLASS_POWER,
        state_class=STATE_CLASS_MEASUREMENT,
        allowedtypes = MIC,
        icon="mdi:solar-power-variant",
    ),
    SolaXMicModbusSensorEntityDescription(
        name="Total Yield",
        key="total_yield",
        native_unit_of_measurement=ENERGY_KILO_WATT_HOUR,
        icon="mdi:solar-power",
        device_class=DEVICE_CLASS_ENERGY,
        state_class=STATE_CLASS_TOTAL_INCREASING,
        register = 0x423,
        newblock = True,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = MIC,
    ),
    SolaXMicModbusSensorEntityDescription(
        name="Today's Yield",
        key="today_yield",
        native_unit_of_measurement=ENERGY_KILO_WATT_HOUR,
        device_class=DEVICE_CLASS_ENERGY,
        state_class=STATE_CLASS_TOTAL_INCREASING,
        register = 0x425,
        register_type = REG_INPUT,
        unit = REGISTER_U32,
        scale = 0.1,
        rounding = 1,
        allowedtypes = MIC,
    ),
    SolaXMicModbusSensorEntityDescription(
        name="PV Voltage 3",
        key="pv_voltage_3",
        native_unit_of_measurement=ELECTRIC_POTENTIAL_VOLT,
        device_class=DEVICE_CLASS_VOLTAGE,
        register = 0x429,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = MIC | GEN,
    ),
    SolaXMicModbusSensorEntityDescription(
        name="PV Current 3",
        key="pv_current_3",
        native_unit_of_measurement=ELECTRIC_CURRENT_AMPERE,
        device_class=DEVICE_CLASS_CURRENT,
        register = 0x42A,
        register_type = REG_INPUT,
        scale = 0.1,
        rounding = 1,
        allowedtypes = MIC | GEN,
        icon="mdi:current-dc",
    ),
    SolaXMicModbusSensorEntityDescription(
        name="PV Power 3",
        key="pv_power_3",
        native_unit_of_measurement=POWER_WATT,
        device_class=DEVICE_CLASS_POWER,
        state_class=STATE_CLASS_MEASUREMENT,
        register = 0x42B,
        register_type = REG_INPUT,
        allowedtypes = MIC | GEN,
        icon="mdi:solar-power-variant",
    ),
]


